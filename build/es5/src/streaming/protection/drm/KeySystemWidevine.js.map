{"version":3,"sources":["../../../../../../src/streaming/protection/drm/KeySystemWidevine.js"],"names":[],"mappings":"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","file":"KeySystemWidevine.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = 'com.widevine.alpha';\nconst schemeIdURI = 'urn:uuid:' + uuid;\nimport BASE64 from '../../../../externals/base64';\n\nfunction KeySystemWidevine() {\n\n    let instance;\n    let protData = null;\n\n    function init(protectionData) {\n        if (protectionData) {\n            protData = protectionData;\n        }\n    }\n\n    function replaceKID(pssh, KID) {\n        let pssh_array;\n        let replace = true;\n        let kidLen = 16;\n        let pos;\n        let i, j;\n\n        pssh_array = new Uint8Array(pssh);\n\n        for (i = 0; i <= pssh_array.length - (kidLen + 2); i++) {\n            if (pssh_array[i] === 0x12 && pssh_array[i + 1] === 0x10) {\n                pos = i + 2;\n                for (j = pos; j < (pos + kidLen); j++) {\n                    if (pssh_array[j] !== 0xFF) {\n                        replace = false;\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n\n        if (replace) {\n            pssh_array.set(KID, pos);\n        }\n\n        return pssh_array.buffer;\n    }\n\n    function getInitData(cp) {\n        var pssh = null;\n        // Get pssh from protectionData or from manifest\n        if (protData && protData.pssh) {\n            pssh = BASE64.decodeArray(protData.pssh).buffer;\n        } else {\n            pssh = CommonEncryption.parseInitDataFromContentProtection(cp);\n        }\n\n        // Check if KID within pssh is empty, in that case set KID value according to 'cenc:default_KID' value\n        if (pssh) {\n            pssh = replaceKID(pssh, cp['cenc:default_KID']);\n        }\n\n        return pssh;\n    }\n\n    function getRequestHeadersFromMessage( /*message*/ ) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        init: init,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);\n"]}