{"version":3,"sources":["../../../../../src/streaming/protection/Protection.js"],"names":[],"mappings":"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","file":"Protection.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n\n        let controller = null;\n\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({log: config.log,});\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                adapter: config.adapter,\n                eventBus: config.eventBus,\n                log: config.log\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n\n        let log = config.log;\n        let eventBus = config.eventBus;\n        let videoElement = config.videoModel.getElement();\n\n        if (videoElement.onencrypted !== undefined &&\n            videoElement.mediaKeys !== undefined &&\n            navigator.requestMediaKeySystemAccess !== undefined &&\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\n\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\n\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n\n            log('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\n\n        } else {\n\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n\n        for (var i = 0; i < apis.length; i++) {\n            var api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nlet factory = FactoryMaker.getClassFactory(Protection);\nfactory.events = ProtectionEvents;\nexport default factory;\n"]}