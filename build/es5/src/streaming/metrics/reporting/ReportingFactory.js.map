{"version":3,"sources":["../../../../../../src/streaming/metrics/reporting/ReportingFactory.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCA+ByB,4BAA4B;;;;qCAC5B,0BAA0B;;;;AAEnD,SAAS,gBAAgB,CAAC,MAAM,EAAE;;AAE9B,QAAI,0BAA0B,GAAG;AAC7B,qCAA6B,oCAAc;KAC9C,CAAC;;AAEF,QAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC3B,QAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACrB,QAAI,QAAQ,YAAA,CAAC;;AAEb,aAAS,MAAM,CAAC,KAAK,EAAE,eAAe,EAAE;AACpC,YAAI,SAAS,CAAC;;AAEd,YAAI;AACA,qBAAS,GAAG,0BAA0B,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;;AAE5E,qBAAS,CAAC,UAAU,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;SAChD,CAAC,OAAO,CAAC,EAAE;AACR,qBAAS,GAAG,IAAI,CAAC;;AAEjB,eAAG,oEAAkE,KAAK,CAAC,WAAW,UAAK,CAAC,CAAC,OAAO,OAAI,CAAC;SAC5G;;AAED,eAAO,SAAS,CAAC;KACpB;;AAED,aAAS,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE;AACvC,kCAA0B,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC;KACxD;;AAED,aAAS,UAAU,CAAC,WAAW,EAAE;AAC7B,eAAO,0BAA0B,CAAC,WAAW,CAAC,CAAC;KAClD;;AAED,YAAQ,GAAG;AACP,cAAM,EAAM,MAAM;AAClB,gBAAQ,EAAI,QAAQ;AACpB,kBAAU,EAAE,UAAU;KACzB,CAAC;;AAEF,WAAO,QAAQ,CAAC;CACnB;;AAED,gBAAgB,CAAC,qBAAqB,GAAG,kBAAkB,CAAC;qBAC7C,8BAAa,mBAAmB,CAAC,gBAAgB,CAAC","file":"ReportingFactory.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport DVBReporting from './reporters/DVBReporting';\n\nfunction ReportingFactory(config) {\n\n    let knownReportingSchemeIdUris = {\n        'urn:dvb:dash:reporting:2014': DVBReporting\n    };\n\n    let context = this.context;\n    let log = config.log;\n    let instance;\n\n    function create(entry, rangeController) {\n        var reporting;\n\n        try {\n            reporting = knownReportingSchemeIdUris[entry.schemeIdUri](context).create();\n\n            reporting.initialize(entry, rangeController);\n        } catch (e) {\n            reporting = null;\n\n            log(`ReportingFactory: could not create Reporting with schemeIdUri ${entry.schemeIdUri} (${e.message})`);\n        }\n\n        return reporting;\n    }\n\n    function register(schemeIdUri, moduleName) {\n        knownReportingSchemeIdUris[schemeIdUri] = moduleName;\n    }\n\n    function unregister(schemeIdUri) {\n        delete knownReportingSchemeIdUris[schemeIdUri];\n    }\n\n    instance = {\n        create:     create,\n        register:   register,\n        unregister: unregister\n    };\n\n    return instance;\n}\n\nReportingFactory.__dashjs_factory_name = 'ReportingFactory';\nexport default FactoryMaker.getSingletonFactory(ReportingFactory);\n"]}