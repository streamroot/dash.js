{"version":3,"sources":["../../../../../../src/streaming/metrics/controllers/ReportingController.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCA+ByB,4BAA4B;;;;yCACxB,+BAA+B;;;;AAE5D,SAAS,mBAAmB,CAAC,MAAM,EAAE;;AAEjC,QAAI,SAAS,GAAG,EAAE,CAAC;AACnB,QAAI,QAAQ,YAAA,CAAC;;AAEb,QAAI,gBAAgB,GAAG,4CAAiB,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC;AAC9D,WAAG,EAAE,MAAM,CAAC,GAAG;KAClB,CAAC,CAAC;;AAEH,aAAS,UAAU,CAAC,SAAS,EAAE,eAAe,EAAE;;;;;AAK5C,iBAAS,CAAC,IAAI,CAAC,UAAA,CAAC,EAAI;AAChB,gBAAI,QAAQ,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;;AAE3D,gBAAI,QAAQ,EAAE;AACV,yBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzB,uBAAO,IAAI,CAAC;aACf;SACJ,CAAC,CAAC;KACN;;AAED,aAAS,KAAK,GAAG;AACb,iBAAS,CAAC,OAAO,CAAC,UAAA,CAAC;mBAAI,CAAC,CAAC,KAAK,EAAE;SAAA,CAAC,CAAC;AAClC,iBAAS,GAAG,EAAE,CAAC;KAClB;;AAED,aAAS,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;AACvB,iBAAS,CAAC,OAAO,CAAC,UAAA,CAAC;mBAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC;SAAA,CAAC,CAAC;KAC/C;;AAED,YAAQ,GAAG;AACP,kBAAU,EAAE,UAAU;AACtB,aAAK,EAAO,KAAK;AACjB,cAAM,EAAM,MAAM;KACrB,CAAC;;AAEF,WAAO,QAAQ,CAAC;CACnB;;AAED,mBAAmB,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;qBACnD,8BAAa,eAAe,CAAC,mBAAmB,CAAC","file":"ReportingController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport ReportingFactory from '../reporting/ReportingFactory';\n\nfunction ReportingController(config) {\n\n    let reporters = [];\n    let instance;\n\n    let reportingFactory = ReportingFactory(this.context).getInstance({\n        log: config.log\n    });\n\n    function initialize(reporting, rangeController) {\n        // \"if multiple Reporting elements are present, it is expected that\n        // the client processes one of the recognized reporting schemes.\"\n        // to ignore this, and support multiple Reporting per Metric,\n        // simply change the 'some' below to 'forEach'\n        reporting.some(r => {\n            var reporter = reportingFactory.create(r, rangeController);\n\n            if (reporter) {\n                reporters.push(reporter);\n                return true;\n            }\n        });\n    }\n\n    function reset() {\n        reporters.forEach(r => r.reset());\n        reporters = [];\n    }\n\n    function report(type, vos) {\n        reporters.forEach(r => r.report(type, vos));\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        report:     report\n    };\n\n    return instance;\n}\n\nReportingController.__dashjs_factory_name = 'ReportingController';\nexport default FactoryMaker.getClassFactory(ReportingController);\n"]}