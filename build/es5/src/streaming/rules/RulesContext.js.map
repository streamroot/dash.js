{"version":3,"sources":["../../../../../src/streaming/rules/RulesContext.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCA+ByB,yBAAyB;;;;AAElD,SAAS,YAAY,CAAC,MAAM,EAAE;;AAE1B,QAAI,QAAQ,YAAA,CAAC;AACb,QAAI,kBAAkB,GAAG,MAAM,CAAC,eAAe,CAAC,4BAA4B,EAAE,CAAC;AAC/E,QAAI,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC;AAChC,QAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AACvC,QAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;AACzC,QAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;AACzC,QAAI,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;AACvD,QAAI,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;AAC3C,QAAI,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC;;AAEtC,aAAS,aAAa,GAAG;AACrB,eAAO,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;KAClD;;AAED,aAAS,YAAY,GAAG;AACpB,eAAO,kBAAkB,CAAC,SAAS,CAAC;KACvC;;AAED,aAAS,YAAY,GAAG;AACpB,eAAO,kBAAkB,CAAC;KAC7B;;AAED,aAAS,eAAe,GAAG;AACvB,eAAO,YAAY,CAAC;KACvB;;AAED,aAAS,eAAe,GAAG;AACvB,eAAO,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC;KAC/D;;AAED,aAAS,kBAAkB,GAAG;AAC1B,eAAO,EAAE,CAAC;KACb;;AAED,aAAS,gBAAgB,GAAG;AACxB,eAAO,aAAa,CAAC;KACxB;;AAED,aAAS,gBAAgB,GAAG;AACxB,eAAO,aAAa,CAAC;KACxB;;AAED,aAAS,uBAAuB,GAAG;AAC/B,eAAO,oBAAoB,CAAC;KAC/B;;AAED,aAAS,iBAAiB,GAAG;AACzB,eAAO,cAAc,CAAC;KACzB;;AAED,aAAS,aAAa,GAAG;AACrB,eAAO,UAAU,CAAC;KACrB;;AAED,YAAQ,GAAG;AACP,uBAAe,EAAE,eAAe;AAChC,uBAAe,EAAE,eAAe;AAChC,oBAAY,EAAE,YAAY;AAC1B,wBAAgB,EAAE,gBAAgB;AAClC,+BAAuB,EAAE,uBAAuB;AAChD,yBAAiB,EAAE,iBAAiB;AACpC,wBAAgB,EAAE,gBAAgB;AAClC,qBAAa,EAAE,aAAa;AAC5B,0BAAkB,EAAE,kBAAkB;AACtC,oBAAY,EAAE,YAAY;AAC1B,qBAAa,EAAE,aAAa;KAC/B,CAAC;;AAEF,WAAO,QAAQ,CAAC;CACnB;;AAED,YAAY,CAAC,qBAAqB,GAAG,cAAc,CAAC;qBACrC,8BAAa,eAAe,CAAC,YAAY,CAAC","file":"RulesContext.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    let instance;\n    let representationInfo = config.streamProcessor.getCurrentRepresentationInfo();\n    let sp = config.streamProcessor;\n    let currentValue = config.currentValue;\n    let playbackIndex = config.playbackIndex;\n    let switchHistory = config.switchHistory;\n    let droppedFramesHistory = config.droppedFramesHistory;\n    let currentRequest = config.currentRequest;\n    let richBuffer = config.hasRichBuffer;\n\n    function getStreamInfo() {\n        return representationInfo.mediaInfo.streamInfo;\n    }\n\n    function getMediaInfo() {\n        return representationInfo.mediaInfo;\n    }\n\n    function getTrackInfo() {\n        return representationInfo;\n    }\n\n    function getCurrentValue() {\n        return currentValue;\n    }\n\n    function getManifestInfo() {\n        return representationInfo.mediaInfo.streamInfo.manifestInfo;\n    }\n\n    function getStreamProcessor() {\n        return sp;\n    }\n\n    function getPlaybackIndex() {\n        return playbackIndex;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function hasRichBuffer() {\n        return richBuffer;\n    }\n\n    instance = {\n        getCurrentValue: getCurrentValue,\n        getManifestInfo: getManifestInfo,\n        getMediaInfo: getMediaInfo,\n        getPlaybackIndex: getPlaybackIndex,\n        getDroppedFramesHistory: getDroppedFramesHistory,\n        getCurrentRequest: getCurrentRequest,\n        getSwitchHistory: getSwitchHistory,\n        getStreamInfo: getStreamInfo,\n        getStreamProcessor: getStreamProcessor,\n        getTrackInfo: getTrackInfo,\n        hasRichBuffer: hasRichBuffer\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);"]}