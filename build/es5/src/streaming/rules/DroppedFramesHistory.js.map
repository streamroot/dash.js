{"version":3,"sources":["../../../../../src/streaming/rules/DroppedFramesHistory.js"],"names":[],"mappings":";;;;;;;;kCACyB,4BAA4B;;;;AAGrD,SAAS,oBAAoB,GAAG;;AAE5B,QAAI,MAAM,GAAG,EAAE,CAAC;AAChB,QAAI,iBAAiB,GAAG,CAAC,CAAC;AAC1B,QAAI,eAAe,GAAG,CAAC,CAAC;;AAExB,aAAS,IAAI,CAAC,KAAK,EAAE,eAAe,EAAE;AAClC,YAAI,qBAAqB,GAAG,eAAe,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AACnF,yBAAiB,GAAG,eAAe,CAAC,kBAAkB,CAAC;;AAEvD,YAAI,mBAAmB,GAAG,eAAe,CAAC,gBAAgB,GAAG,eAAe,CAAC;AAC7E,uBAAe,GAAG,eAAe,CAAC,gBAAgB,CAAC;;AAEnD,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAChB,kBAAM,CAAC,KAAK,CAAC,GAAG,EAAC,kBAAkB,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,mBAAmB,EAAC,CAAC;SACtG,MAAM;AACH,kBAAM,CAAC,KAAK,CAAC,CAAC,kBAAkB,IAAI,qBAAqB,CAAC;AAC1D,kBAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,IAAI,mBAAmB,CAAC;SACzD;KACJ;;AAED,aAAS,sBAAsB,GAAG;AAC9B,eAAO,MAAM,CAAC;KACjB;;AAED,aAAS,KAAK,CAAC,eAAe,EAAE;AAC5B,cAAM,GAAG,EAAE,CAAC;AACZ,yBAAiB,GAAG,eAAe,CAAC,kBAAkB,CAAC;AACvD,uBAAe,GAAG,eAAe,CAAC,gBAAgB,CAAC;KACtD;;AAED,WAAO;AACH,YAAI,EAAE,IAAI;AACV,uBAAe,EAAE,sBAAsB;AACvC,aAAK,EAAE,KAAK;KACf,CAAC;CACL;;AAED,oBAAoB,CAAC,qBAAqB,GAAG,sBAAsB,CAAC;AACpE,IAAI,OAAO,GAAG,gCAAa,eAAe,CAAC,oBAAoB,CAAC,CAAC;qBAClD,OAAO","file":"DroppedFramesHistory.js","sourcesContent":["\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\n\nfunction DroppedFramesHistory() {\n\n    let values = [];\n    let lastDroppedFrames = 0;\n    let lastTotalFrames = 0;\n\n    function push(index, playbackQuality) {\n        let intervalDroppedFrames = playbackQuality.droppedVideoFrames - lastDroppedFrames;\n        lastDroppedFrames = playbackQuality.droppedVideoFrames;\n\n        let intervalTotalFrames = playbackQuality.totalVideoFrames - lastTotalFrames;\n        lastTotalFrames = playbackQuality.totalVideoFrames;\n\n        if (!values[index]) {\n            values[index] = {droppedVideoFrames: intervalDroppedFrames, totalVideoFrames: intervalTotalFrames};\n        } else {\n            values[index].droppedVideoFrames += intervalDroppedFrames;\n            values[index].totalVideoFrames += intervalTotalFrames;\n        }\n    }\n\n    function getDroppedFrameHistory() {\n        return values;\n    }\n\n    function reset(playbackQuality) {\n        values = [];\n        lastDroppedFrames = playbackQuality.droppedVideoFrames;\n        lastTotalFrames = playbackQuality.totalVideoFrames;\n    }\n\n    return {\n        push: push,\n        getFrameHistory: getDroppedFrameHistory,\n        reset: reset\n    };\n}\n\nDroppedFramesHistory.__dashjs_factory_name = 'DroppedFramesHistory';\nlet factory = FactoryMaker.getClassFactory(DroppedFramesHistory);\nexport default factory;"]}