{"version":3,"sources":["../../../../../../src/streaming/rules/abr/ABRRulesCollection.js"],"names":[],"mappings":"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","file":"ABRRulesCollection.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ThroughputRule from './ThroughputRule';\nimport InsufficientBufferRule from './InsufficientBufferRule';\nimport AbandonRequestsRule from './AbandonRequestsRule';\nimport DroppedFramesRule from './DroppedFramesRule.js';\nimport SwitchHistoryRule from './SwitchHistoryRule.js';\nimport BolaRule from './BolaRule';\nimport BolaAbandonRule from './BolaAbandonRule';\nimport MediaPlayerModel from '../../models/MediaPlayerModel';\nimport MetricsModel from '../../models/MetricsModel';\nimport DashMetrics from '../../../dash/DashMetrics';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest.js';\n\nconst QUALITY_SWITCH_RULES = 'qualitySwitchRules';\nconst ABANDON_FRAGMENT_RULES = 'abandonFragmentRules';\n\nfunction ABRRulesCollection() {\n\n    let context = this.context;\n\n    let instance,\n        qualitySwitchRules,\n        abandonFragmentRules;\n\n    function initialize() {\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n\n        let metricsModel = MetricsModel(context).getInstance();\n        let dashMetrics = DashMetrics(context).getInstance();\n        let mediaPlayerModel = MediaPlayerModel(context).getInstance();\n\n        if (mediaPlayerModel.getBufferOccupancyABREnabled()) {\n            qualitySwitchRules.push(\n                BolaRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: DashMetrics(context).getInstance()\n                })\n            );\n            abandonFragmentRules.push(\n                BolaAbandonRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: DashMetrics(context).getInstance()\n                })\n            );\n        } else {\n            qualitySwitchRules.push(\n                ThroughputRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics\n                })\n            );\n\n            qualitySwitchRules.push(InsufficientBufferRule(context).create({metricsModel: metricsModel}));\n            qualitySwitchRules.push(SwitchHistoryRule(context).create());\n            qualitySwitchRules.push(DroppedFramesRule(context).create());\n            abandonFragmentRules.push(AbandonRequestsRule(context).create());\n        }\n    }\n\n    function getRules (type) {\n        switch (type) {\n            case QUALITY_SWITCH_RULES:\n                return qualitySwitchRules;\n            case ABANDON_FRAGMENT_RULES:\n                return abandonFragmentRules;\n            default:\n                return null;\n        }\n    }\n\n    function getActiveRules(srArray) {\n        return srArray.filter(sr => sr.value > SwitchRequest.NO_CHANGE);\n    }\n\n    function getMinSwitchRequest(srArray) {\n        if (srArray.length === 0) {\n            return;\n        }\n        return srArray.reduce((a, b) => { return a.value < b.value ? a : b; });\n    }\n\n    function getMaxQuality(rulesContext) {\n        let switchRequestArray = qualitySwitchRules.map(rule => rule.getMaxIndex(rulesContext));\n        let activeRules = getActiveRules(switchRequestArray);\n        let maxQuality = getMinSwitchRequest(activeRules);\n\n        return maxQuality || SwitchRequest(context).create();\n    }\n\n    function shouldAbandonFragment(rulesContext) {\n        let abandonRequestArray = abandonFragmentRules.map(rule => rule.shouldAbandon(rulesContext));\n        let activeRules = getActiveRules(abandonRequestArray);\n        let shouldAbandon = getMinSwitchRequest(activeRules);\n\n        return shouldAbandon || SwitchRequest(context).create();\n    }\n\n    instance = {\n        initialize: initialize,\n        getRules: getRules,\n        getMaxQuality: getMaxQuality,\n        shouldAbandonFragment: shouldAbandonFragment\n    };\n\n    return instance;\n}\n\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\nlet factory =  FactoryMaker.getSingletonFactory(ABRRulesCollection);\nfactory.QUALITY_SWITCH_RULES = QUALITY_SWITCH_RULES;\nfactory.ABANDON_FRAGMENT_RULES = ABANDON_FRAGMENT_RULES;\nexport default factory;\n"]}