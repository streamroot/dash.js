{"version":3,"sources":["../../../../../../src/streaming/rules/abr/DroppedFramesRule.js"],"names":[],"mappings":";;;;;;;;kCACyB,+BAA+B;;;;+BAC9B,qBAAqB;;;;yBAC7B,qBAAqB;;;;AAEvC,SAAS,iBAAiB,GAAG;AACzB,QAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC7B,QAAM,GAAG,GAAG,4BAAM,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC;;AAE7C,QAAM,yBAAyB,GAAG,IAAI,CAAC;AACvC,QAAM,gBAAgB,GAAG,GAAG,CAAC;;AAG7B,aAAS,WAAW,CAAC,YAAY,EAAE;AAC/B,YAAI,oBAAoB,GAAG,YAAY,CAAC,uBAAuB,EAAE,CAAC;AAClE,YAAI,oBAAoB,EAAE;AACtB,gBAAI,GAAG,GAAG,oBAAoB,CAAC,eAAe,EAAE,CAAC;AACjD,gBAAI,aAAa,GAAG,CAAC,CAAC;AACtB,gBAAI,WAAW,GAAG,CAAC,CAAC;AACpB,gBAAI,QAAQ,GAAG,6BAAc,SAAS,CAAC;AACvC,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;AACjC,oBAAI,GAAG,CAAC,CAAC,CAAC,EAAE;AACR,iCAAa,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;AAC1C,+BAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;;AAEtC,wBAAI,WAAW,GAAG,gBAAgB,IAAI,aAAa,GAAG,WAAW,GAAG,yBAAyB,EAAE;AAC3F,gCAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,2BAAG,CAAC,4BAA4B,GAAG,QAAQ,GAAG,mBAAmB,GAAG,aAAa,GAAG,iBAAiB,GAAG,WAAW,CAAC,CAAC;AACrH,8BAAM;qBACT;iBACJ;aACJ;AACD,mBAAO,kCAAc,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAC,aAAa,EAAE,aAAa,EAAC,CAAC,CAAC;SAClF;;AAED,eAAO,kCAAc,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;KAC1C;;AAED,WAAO;AACH,mBAAW,EAAE,WAAW;KAC3B,CAAC;CACL;;AAED,iBAAiB,CAAC,qBAAqB,GAAG,mBAAmB,CAAC;AAC9D,IAAI,OAAO,GAAG,gCAAa,eAAe,CAAC,iBAAiB,CAAC,CAAC;;qBAE/C,OAAO","file":"DroppedFramesRule.js","sourcesContent":["\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport Debug from '../../../core/Debug';\n\nfunction DroppedFramesRule() {\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n\n    const DROPPED_PERCENTAGE_FORBID = 0.15;\n    const GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\n\n\n    function getMaxIndex(rulesContext) {\n        let droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n        if (droppedFramesHistory) {\n            let dfh = droppedFramesHistory.getFrameHistory();\n            let droppedFrames = 0;\n            let totalFrames = 0;\n            let maxIndex = SwitchRequest.NO_CHANGE;\n            for (let i = 1; i < dfh.length; i++) { //No point in measuring dropped frames for the zeroeth index.\n                if (dfh[i]) {\n                    droppedFrames = dfh[i].droppedVideoFrames;\n                    totalFrames = dfh[i].totalVideoFrames;\n\n                    if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\n                        maxIndex = i - 1;\n                        log('DroppedFramesRule, index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\n                        break;\n                    }\n                }\n            }\n            return SwitchRequest(context).create(maxIndex, {droppedFrames: droppedFrames});\n        }\n\n        return SwitchRequest(context).create();\n    }\n\n    return {\n        getMaxIndex: getMaxIndex\n    };\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nlet factory = FactoryMaker.getClassFactory(DroppedFramesRule);\n\nexport default factory;"]}