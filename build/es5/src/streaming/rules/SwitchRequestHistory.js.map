{"version":3,"sources":["../../../../../src/streaming/rules/SwitchRequestHistory.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCA+ByB,4BAA4B;;;;+BAC3B,oBAAoB;;;;AAE9C,IAAM,4BAA4B,GAAG,CAAC,CAAC;;AAEvC,SAAS,oBAAoB,GAAG;AAC5B,QAAI,cAAc,GAAG,EAAE,CAAC;AACxB,QAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,aAAS,IAAI,CAAC,aAAa,EAAE;AACzB,YAAI,aAAa,CAAC,QAAQ,KAAK,6BAAc,SAAS,EAAE;AACpD,yBAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;SACnD;AACD,YAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;AACzC,0BAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAC,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAC,CAAC;SAChF;;;AAGD,YAAI,SAAS,GAAG,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;AAChE,YAAI,IAAI,GAAG,AAAC,SAAS,GAAG,CAAC,GAAI,CAAC,GAAG,CAAC,CAAC;AACnC,YAAI,QAAQ,GAAG,IAAI,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;AACrC,YAAI,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;;;AAG1B,sBAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;AACrD,sBAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAC5D,sBAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC;;;AAGzD,iBAAS,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;;;AAG9F,YAAK,SAAS,CAAC,MAAM,GAAG,4BAA4B,EAAG;AACnD,gBAAI,cAAc,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AACvC,0BAAc,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,cAAc,CAAC,IAAI,CAAC;AAChE,0BAAc,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC;AACvE,0BAAc,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,cAAc,CAAC,MAAM,CAAC;SACvE;KACJ;;AAED,aAAS,iBAAiB,GAAG;AACzB,eAAO,cAAc,CAAC;KACzB;;AAED,aAAS,KAAK,GAAG;AACb,sBAAc,GAAG,EAAE,CAAC;AACpB,iBAAS,GAAG,EAAE,CAAC;KAClB;;AAED,WAAO;AACH,YAAI,EAAE,IAAI;AACV,yBAAiB,EAAE,iBAAiB;AACpC,aAAK,EAAE,KAAK;KACf,CAAC;CACL;;AAED,oBAAoB,CAAC,qBAAqB,GAAG,sBAAsB,CAAC;AACpE,IAAI,OAAO,GAAG,gCAAa,eAAe,CAAC,oBAAoB,CAAC,CAAC;qBAClD,OAAO","file":"SwitchRequestHistory.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport SwitchRequest from './SwitchRequest.js';\n\nconst SWITCH_REQUEST_HISTORY_DEPTH = 8; // must be > SwitchHistoryRule SAMPLE_SIZE to enable rule\n\nfunction SwitchRequestHistory() {\n    let switchRequests = []; // running total\n    let srHistory = []; // history of each switch\n\n    function push(switchRequest) {\n        if (switchRequest.newValue === SwitchRequest.NO_CHANGE) {\n            switchRequest.newValue = switchRequest.oldValue;\n        }\n        if (!switchRequests[switchRequest.oldValue]) {\n            switchRequests[switchRequest.oldValue] = {noDrops: 0, drops: 0, dropSize: 0};\n        }\n\n        // Set switch details\n        let indexDiff = switchRequest.newValue - switchRequest.oldValue;\n        let drop = (indexDiff < 0) ? 1 : 0;\n        let dropSize = drop ? -indexDiff : 0;\n        let noDrop = drop ? 0 : 1;\n\n        // Update running totals\n        switchRequests[switchRequest.oldValue].drops += drop;\n        switchRequests[switchRequest.oldValue].dropSize += dropSize;\n        switchRequests[switchRequest.oldValue].noDrops += noDrop;\n\n        // Save to history\n        srHistory.push({idx: switchRequest.oldValue, noDrop: noDrop, drop: drop, dropSize: dropSize});\n\n        // Shift earliest switch off srHistory and readjust to keep depth of running totals constant\n        if ( srHistory.length > SWITCH_REQUEST_HISTORY_DEPTH ) {\n            let srHistoryFirst = srHistory.shift();\n            switchRequests[srHistoryFirst.idx].drops -= srHistoryFirst.drop;\n            switchRequests[srHistoryFirst.idx].dropSize -= srHistoryFirst.dropSize;\n            switchRequests[srHistoryFirst.idx].noDrops -= srHistoryFirst.noDrop;\n        }\n    }\n\n    function getSwitchRequests() {\n        return switchRequests;\n    }\n\n    function reset() {\n        switchRequests = [];\n        srHistory = [];\n    }\n\n    return {\n        push: push,\n        getSwitchRequests: getSwitchRequests,\n        reset: reset\n    };\n}\n\nSwitchRequestHistory.__dashjs_factory_name = 'SwitchRequestHistory';\nlet factory = FactoryMaker.getClassFactory(SwitchRequestHistory);\nexport default factory;\n"]}