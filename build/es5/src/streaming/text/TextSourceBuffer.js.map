{"version":3,"sources":["../../../../../src/streaming/text/TextSourceBuffer.js"],"names":[],"mappings":"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","file":"TextSourceBuffer.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport TextTrackInfo from '../vo/TextTrackInfo';\nimport FragmentedTextBoxParser from '../../dash/utils/FragmentedTextBoxParser';\nimport BoxParser from '../utils/BoxParser';\nimport CustomTimeRanges from '../utils/CustomTimeRanges';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport VideoModel from '../models/VideoModel';\nimport TextTracks from './TextTracks';\nimport EmbeddedTextHtmlRender from './EmbeddedTextHtmlRender';\nimport ISOBoxer from 'codem-isoboxer';\nimport cea608parser from '../../../externals/cea608-parser';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction TextSourceBuffer() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    const eventBus = EventBus(context).getInstance();\n    let embeddedInitialized = false;\n\n    let instance,\n        boxParser,\n        errHandler,\n        dashManifestModel,\n        mediaController,\n        parser,\n        vttParser,\n        ttmlParser,\n        fragmentedTextBoxParser,\n        mediaInfos,\n        textTracks,\n        isFragmented,\n        fragmentModel,\n        initializationSegmentReceived,\n        timescale,\n        fragmentedTracks,\n        videoModel,\n        streamController,\n        firstSubtitleStart,\n        currFragmentedTrackIdx,\n        embeddedTracks,\n        embeddedInitializationSegmentReceived,\n        embeddedTimescale,\n        embeddedLastSequenceNumber,\n        embeddedSequenceNumbers,\n        embeddedCea608FieldParsers,\n        embeddedTextHtmlRender;\n\n    function initialize(type, bufferController) {\n        parser = null;\n        fragmentModel = null;\n        initializationSegmentReceived = false;\n        timescale = NaN;\n        fragmentedTracks = [];\n        firstSubtitleStart = null;\n\n        if (!embeddedInitialized) {\n            initEmbedded();\n        }\n\n        let streamProcessor = bufferController.getStreamProcessor();\n\n        mediaInfos = streamProcessor.getMediaInfoArr();\n        textTracks.setConfig({\n            videoModel: videoModel\n        });\n        textTracks.initialize();\n        isFragmented = !dashManifestModel.getIsTextTrack(type);\n        boxParser = BoxParser(context).getInstance();\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\n        fragmentedTextBoxParser.setConfig({\n            boxParser: boxParser\n        });\n\n        if (isFragmented) {\n            fragmentModel = streamProcessor.getFragmentModel();\n            this.buffered = CustomTimeRanges(context).create();\n            fragmentedTracks = mediaController.getTracksFor('fragmentedText', streamController.getActiveStreamInfo());\n            var currFragTrack = mediaController.getCurrentTrackFor('fragmentedText', streamController.getActiveStreamInfo());\n            for (var i = 0; i < fragmentedTracks.length; i++) {\n                if (fragmentedTracks[i] === currFragTrack) {\n                    currFragmentedTrackIdx = i;\n                    break;\n                }\n            }\n        }\n    }\n\n    function abort() {\n        textTracks.deleteAllTextTracks();\n        parser = null;\n        fragmentedTextBoxParser = null;\n        mediaInfos = null;\n        textTracks = null;\n        isFragmented = false;\n        fragmentModel = null;\n        initializationSegmentReceived = false;\n        timescale = NaN;\n        fragmentedTracks = [];\n        videoModel = null;\n        streamController = null;\n        embeddedInitialized = false;\n        embeddedTracks = null;\n    }\n\n\n    function onVideoChunkReceived(e) {\n        const chunk = e.chunk;\n\n        if (chunk.mediaInfo.embeddedCaptions) {\n            append(chunk.bytes, chunk);\n        }\n    }\n\n    function initEmbedded() {\n        embeddedTracks = [];\n        mediaInfos = [];\n        videoModel = VideoModel(context).getInstance();\n        textTracks = TextTracks(context).getInstance();\n        textTracks.setConfig({\n            videoModel: videoModel\n        });\n        textTracks.initialize();\n        boxParser = BoxParser(context).getInstance();\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\n        fragmentedTextBoxParser.setConfig({\n            boxParser: boxParser\n        });\n        isFragmented = false;\n        currFragmentedTrackIdx = null;\n        embeddedInitializationSegmentReceived = false;\n        embeddedTimescale = 0;\n        embeddedCea608FieldParsers = [];\n        embeddedSequenceNumbers = [];\n        embeddedLastSequenceNumber = null;\n        embeddedInitialized = true;\n        embeddedTextHtmlRender = EmbeddedTextHtmlRender(context).getInstance();\n\n        eventBus.on(Events.VIDEO_CHUNK_RECEIVED, onVideoChunkReceived, this);\n    }\n\n    function resetEmbedded() {\n        eventBus.off(Events.VIDEO_CHUNK_RECEIVED, onVideoChunkReceived, this);\n        if (textTracks !== null) {\n            textTracks.deleteAllTextTracks();\n        }\n        embeddedInitialized = false;\n        embeddedTracks = [];\n        embeddedCea608FieldParsers = [null, null];\n        embeddedSequenceNumbers = [];\n        embeddedLastSequenceNumber = null;\n    }\n\n    function addEmbeddedTrack(mediaInfo) {\n        if (!embeddedInitialized) {\n            initEmbedded();\n        }\n        if (mediaInfo.id === 'CC1' || mediaInfo.id === 'CC3') {\n            embeddedTracks.push(mediaInfo);\n        } else {\n            log('Warning: Embedded track ' + mediaInfo.id + ' not supported!');\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.textTracks) {\n            textTracks = config.textTracks;\n        }\n        if (config.vttParser) {\n            vttParser = config.vttParser;\n        }\n        if (config.ttmlParser) {\n            ttmlParser = config.ttmlParser;\n        }\n    }\n\n    function getConfig() {\n        var config = {\n            errHandler: errHandler,\n            dashManifestModel: dashManifestModel,\n            mediaController: mediaController,\n            videoModel: videoModel,\n            fragmentModel: fragmentModel,\n            streamController: streamController,\n            textTracks: textTracks,\n            isFragmented: isFragmented,\n            embeddedTracks: embeddedTracks,\n            fragmentedTracks: fragmentedTracks\n        };\n\n        return config;\n    }\n\n    function setCurrentFragmentedTrackIdx(idx) {\n        currFragmentedTrackIdx = idx;\n    }\n\n    function append(bytes, chunk) {\n        var result,\n            sampleList,\n            i, j, k,\n            samplesInfo,\n            ccContent;\n        var mediaInfo = chunk.mediaInfo;\n        var mediaType = mediaInfo.type;\n        var mimeType = mediaInfo.mimeType;\n        var codecType = mediaInfo.codec || mimeType;\n        if (!codecType) {\n            log('No text type defined');\n            return;\n        }\n\n        function createTextTrackFromMediaInfo(captionData, mediaInfo) {\n            var textTrackInfo = new TextTrackInfo();\n            var trackKindMap = {\n                subtitle: 'subtitles',\n                caption: 'captions'\n            }; //Dash Spec has no \"s\" on end of KIND but HTML needs plural.\n            var getKind = function () {\n                var kind = (mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0]] : trackKindMap.caption;\n                kind = (kind === trackKindMap.caption || kind === trackKindMap.subtitle) ? kind : trackKindMap.caption;\n                return kind;\n            };\n\n            var checkTTML = function () {\n                var ttml = false;\n                if (mediaInfo.codec && mediaInfo.codec.search('stpp') >= 0) {\n                    ttml = true;\n                }\n                if (mediaInfo.mimeType && mediaInfo.mimeType.search('ttml') >= 0) {\n                    ttml = true;\n                }\n                return ttml;\n            };\n\n            textTrackInfo.captionData = captionData;\n            textTrackInfo.lang = mediaInfo.lang;\n            textTrackInfo.label = mediaInfo.id; // AdaptationSet id (an unsigned int)\n            textTrackInfo.index = mediaInfo.index; // AdaptationSet index in manifest\n            textTrackInfo.isTTML = checkTTML();\n            textTrackInfo.video = videoModel.getElement();\n            textTrackInfo.defaultTrack = getIsDefault(mediaInfo);\n            textTrackInfo.isFragmented = isFragmented;\n            textTrackInfo.isEmbedded = mediaInfo.isEmbedded ? true : false;\n            textTrackInfo.kind = getKind();\n            textTrackInfo.roles = mediaInfo.roles;\n            var totalNrTracks = (mediaInfos ? mediaInfos.length : 0) + embeddedTracks.length;\n            textTracks.addTextTrack(textTrackInfo, totalNrTracks);\n        }\n\n        if (mediaType === 'fragmentedText') {\n            if (!initializationSegmentReceived) {\n                initializationSegmentReceived = true;\n                for (i = 0; i < mediaInfos.length; i++) {\n                    createTextTrackFromMediaInfo(null, mediaInfos[i]);\n                }\n                timescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\n            } else {\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\n                sampleList = samplesInfo.sampleList;\n                if (!firstSubtitleStart && sampleList.length > 0) {\n                    firstSubtitleStart = sampleList[0].cts - chunk.start * timescale;\n                }\n                if (codecType.search('stpp') >= 0) {\n                    parser = parser !== null ? parser : getParser(codecType);\n                    for (i = 0; i < sampleList.length; i++) {\n                        let sample = sampleList[i];\n                        let sampleStart = sample.cts;\n                        let sampleRelStart = sampleStart - firstSubtitleStart;\n                        this.buffered.add(sampleRelStart / timescale, (sampleRelStart + sample.duration) / timescale);\n                        let dataView = new DataView(bytes, sample.offset, sample.subSizes[0]);\n                        ccContent = ISOBoxer.Utils.dataViewToString(dataView, 'utf-8');\n                        let images = [];\n                        let subOffset = sample.offset + sample.subSizes[0];\n                        for (j = 1; j < sample.subSizes.length; j++) {\n                            let inData = new Uint8Array(bytes, subOffset, sample.subSizes[j]);\n                            let raw = String.fromCharCode.apply(null, inData);\n                            images.push(raw);\n                            subOffset += sample.subSizes[j];\n                        }\n                        try {\n                            result = parser.parse(ccContent, sampleStart / timescale, (sampleStart + sample.duration) / timescale, images);\n                            textTracks.addCaptions(currFragmentedTrackIdx, firstSubtitleStart / timescale, result);\n                        } catch (e) {\n                            log('TTML parser error: ' + e.message);\n                        }\n                    }\n                } else {\n                    // WebVTT case\n                    var captionArray = [];\n                    for (i = 0; i < sampleList.length; i++) {\n                        var sample = sampleList[i];\n                        sample.cts -= firstSubtitleStart;\n                        this.buffered.add(sample.cts / timescale, (sample.cts + sample.duration) / timescale);\n                        var sampleData = bytes.slice(sample.offset, sample.offset + sample.size);\n                        // There are boxes inside the sampleData, so we need a ISOBoxer to get at it.\n                        var sampleBoxes = ISOBoxer.parseBuffer(sampleData);\n\n                        for (j = 0; j < sampleBoxes.boxes.length; j++) {\n                            var box1 = sampleBoxes.boxes[j];\n                            log('VTT box1: ' + box1.type);\n                            if (box1.type === 'vtte') {\n                                continue; //Empty box\n                            }\n                            if (box1.type === 'vttc') {\n                                log('VTT vttc boxes.length = ' + box1.boxes.length);\n                                for (k = 0; k < box1.boxes.length; k++) {\n                                    var box2 = box1.boxes[k];\n                                    log('VTT box2: ' + box2.type);\n                                    if (box2.type === 'payl') {\n                                        var cue_text = box2.cue_text;\n                                        log('VTT cue_text = ' + cue_text);\n                                        var start_time = sample.cts / timescale;\n                                        var end_time = (sample.cts + sample.duration) / timescale;\n                                        captionArray.push({\n                                            start: start_time,\n                                            end: end_time,\n                                            data: cue_text,\n                                            styles: {}\n                                        });\n                                        log('VTT ' + start_time + '-' + end_time + ' : ' + cue_text);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (captionArray.length > 0) {\n                        textTracks.addCaptions(currFragmentedTrackIdx, 0, captionArray);\n                    }\n                }\n            }\n        } else if (mediaType === 'text') {\n            let dataView = new DataView(bytes, 0, bytes.byteLength);\n            ccContent = ISOBoxer.Utils.dataViewToString(dataView, 'utf-8');\n\n            try {\n                result = getParser(codecType).parse(ccContent);\n                createTextTrackFromMediaInfo(result, mediaInfo);\n            } catch (e) {\n                errHandler.timedTextError(e, 'parse', ccContent);\n            }\n        } else if (mediaType === 'video') { //embedded text\n            if (chunk.segmentType === 'InitializationSegment') {\n                if (embeddedTimescale === 0) {\n                    embeddedTimescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\n                    for (i = 0; i < embeddedTracks.length; i++) {\n                        createTextTrackFromMediaInfo(null, embeddedTracks[i]);\n                    }\n                }\n            } else { // MediaSegment\n                if (embeddedTimescale === 0) {\n                    log('CEA-608: No timescale for embeddedTextTrack yet');\n                    return;\n                }\n                var makeCueAdderForIndex = function (self, trackIndex) {\n                    function newCue(startTime, endTime, captionScreen) {\n                        var captionsArray = null;\n                        if (videoModel.getTTMLRenderingDiv()) {\n                            captionsArray = embeddedTextHtmlRender.createHTMLCaptionsFromScreen(videoModel.getElement(), startTime, endTime, captionScreen);\n                        } else {\n                            var text = captionScreen.getDisplayText();\n                            //log(\"CEA text: \" + startTime + \"-\" + endTime + \"  '\" + text + \"'\");\n                            captionsArray = [{\n                                start: startTime,\n                                end: endTime,\n                                data: text,\n                                styles: {}\n                            }];\n                        }\n                        if (captionsArray) {\n                            textTracks.addCaptions(trackIndex, 0, captionsArray);\n                        }\n                    }\n                    return newCue;\n                };\n\n\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\n                var sequenceNumber = samplesInfo.sequenceNumber;\n\n                if (!embeddedCea608FieldParsers[0] && !embeddedCea608FieldParsers[1]) {\n                    // Time to setup the CEA-608 parsing\n                    let field, handler, trackIdx;\n                    for (i = 0; i < embeddedTracks.length; i++) {\n                        if (embeddedTracks[i].id === 'CC1') {\n                            field = 0;\n                            trackIdx = textTracks.getTrackIdxForId('CC1');\n                        } else if (embeddedTracks[i].id === 'CC3') {\n                            field = 1;\n                            trackIdx = textTracks.getTrackIdxForId('CC3');\n                        }\n                        if (trackIdx === -1) {\n                            log('CEA-608: data before track is ready.');\n                            return;\n                        }\n                        handler = makeCueAdderForIndex(this, trackIdx);\n                        embeddedCea608FieldParsers[i] = new cea608parser.Cea608Parser(i, {\n                            'newCue': handler\n                        }, null);\n                    }\n                }\n\n                if (embeddedTimescale && embeddedSequenceNumbers.indexOf(sequenceNumber) == -1) {\n                    if (embeddedLastSequenceNumber !== null && sequenceNumber !== embeddedLastSequenceNumber + 1) {\n                        for (i = 0; i < embeddedCea608FieldParsers.length; i++) {\n                            if (embeddedCea608FieldParsers[i]) {\n                                embeddedCea608FieldParsers[i].reset();\n                            }\n                        }\n                    }\n                    var allCcData = extractCea608Data(bytes);\n\n                    for (var fieldNr = 0; fieldNr < embeddedCea608FieldParsers.length; fieldNr++) {\n                        var ccData = allCcData.fields[fieldNr];\n                        var fieldParser = embeddedCea608FieldParsers[fieldNr];\n                        if (fieldParser) {\n                            /*if (ccData.length > 0 ) {\n                                log(\"CEA-608 adding Data to field \" + fieldNr + \" \" + ccData.length + \"bytes\");\n                            }*/\n                            for (i = 0; i < ccData.length; i++) {\n                                fieldParser.addData(ccData[i][0] / embeddedTimescale, ccData[i][1]);\n                            }\n                            if (allCcData.endTime) {\n                                fieldParser.cueSplitAtTime(allCcData.endTime / embeddedTimescale);\n                            }\n                        }\n                    }\n                    embeddedLastSequenceNumber = sequenceNumber;\n                    embeddedSequenceNumbers.push(sequenceNumber);\n                }\n            }\n        }\n    }\n    /**\n     * Extract CEA-608 data from a buffer of data.\n     * @param {ArrayBuffer} data\n     * @returns {Object|null} ccData corresponding to one segment.\n     */\n    function extractCea608Data(data) {\n\n        var isoFile = boxParser.parse(data);\n        var moof = isoFile.getBox('moof');\n        var tfdt = isoFile.getBox('tfdt');\n        var tfhd = isoFile.getBox('tfhd'); //Can have a base_data_offset and other default values\n        //log(\"tfhd: \" + tfhd);\n        //var saio = isoFile.getBox('saio'); // Offset possibly\n        //var saiz = isoFile.getBox('saiz'); // Possible sizes\n        var truns = isoFile.getBoxes('trun'); //\n        var trun = null;\n\n        if (truns.length === 0) {\n            return null;\n        }\n        trun = truns[0];\n        if (truns.length > 1) {\n            log('Warning: Too many truns');\n        }\n        var baseOffset = moof.offset + trun.data_offset;\n        //Doublecheck that trun.offset == moof.size + 8\n        var sampleCount = trun.sample_count;\n        var startPos = baseOffset;\n        var baseSampleTime = tfdt.baseMediaDecodeTime;\n        var raw = new DataView(data);\n        var allCcData = {\n            'startTime': null,\n            'endTime': null,\n            fields: [[], []]\n        };\n        var accDuration = 0;\n        for (var i = 0; i < sampleCount; i++) {\n            var sample = trun.samples[i];\n            if (sample.sample_duration === undefined) {\n                sample.sample_duration = tfhd.default_sample_duration;\n            }\n            if (sample.sample_size === undefined) {\n                sample.sample_size = tfhd.default_sample_size;\n            }\n            if (sample.sample_composition_time_offset === undefined) {\n                sample.sample_composition_time_offset = 0;\n            }\n            var sampleTime = baseSampleTime + accDuration + sample.sample_composition_time_offset;\n            var cea608Ranges = cea608parser.findCea608Nalus(raw, startPos, sample.sample_size);\n            for (var j = 0; j < cea608Ranges.length; j++) {\n                var ccData = cea608parser.extractCea608DataFromRange(raw, cea608Ranges[j]);\n                for (var k = 0; k < 2; k++) {\n                    if (ccData[k].length > 0) {\n                        allCcData.fields[k].push([sampleTime, ccData[k]]);\n                    }\n                }\n            }\n\n            accDuration += sample.sample_duration;\n            startPos += sample.sample_size;\n        }\n\n        // Sort by sampleTime ascending order\n        allCcData.fields[0].sort(function (a, b) {\n            return a[0] - b[0];\n        });\n        allCcData.fields[1].sort(function (a, b) {\n            return a[0] - b[0];\n        });\n\n        var endSampleTime = baseSampleTime + accDuration;\n        allCcData.startTime = baseSampleTime;\n        allCcData.endTime = endSampleTime;\n        return allCcData;\n    }\n\n    function getIsDefault(mediaInfo) {\n        //TODO How to tag default. currently same order as listed in manifest.\n        // Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND\n        // Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.\n        var isDefault = false;\n        if (embeddedTracks.length > 1 && mediaInfo.isEmbedded) {\n            isDefault = (mediaInfo.id && mediaInfo.id === 'CC1'); // CC1 if both CC1 and CC3 exist\n        } else if (embeddedTracks.length === 1) {\n            if (mediaInfo.id && mediaInfo.id.substring(0, 2) === 'CC') { // Either CC1 or CC3\n                isDefault = true;\n            }\n        } else if (embeddedTracks.length === 0) {\n            isDefault = (mediaInfo.index === mediaInfos[0].index);\n        }\n        return isDefault;\n    }\n\n    function getParser(codecType) {\n        var parser;\n        if (codecType.search('vtt') >= 0) {\n            parser = vttParser;\n        } else if (codecType.search('ttml') >= 0 || codecType.search('stpp') >= 0) {\n            parser = ttmlParser;\n            parser.setConfig({\n                videoModel: videoModel\n            });\n        }\n        return parser;\n    }\n\n    instance = {\n        initialize: initialize,\n        append: append,\n        abort: abort,\n        addEmbeddedTrack: addEmbeddedTrack,\n        resetEmbedded: resetEmbedded,\n        setConfig: setConfig,\n        getConfig: getConfig,\n        setCurrentFragmentedTrackIdx: setCurrentFragmentedTrackIdx\n    };\n\n    return instance;\n}\n\nTextSourceBuffer.__dashjs_factory_name = 'TextSourceBuffer';\nexport default FactoryMaker.getSingletonFactory(TextSourceBuffer);\n"]}