{"version":3,"sources":["../../../../../src/streaming/utils/InitCache.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAmCyB,yBAAyB;;;;AAElD,SAAS,SAAS,GAAG;;AAEjB,QAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,aAAS,IAAI,CAAE,KAAK,EAAE;AAClB,YAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC1B,YAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AAClC,YAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;;AAE9B,YAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;AAC1B,YAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACtC,YAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;KACnC;;AAED,aAAS,OAAO,CAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE;AAC5C,eAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;KAC7C;;AAGD,aAAS,KAAK,GAAI;AACd,YAAI,GAAG,EAAE,CAAC;KACb;;AAED,QAAM,QAAQ,GAAG;AACb,YAAI,EAAE,IAAI;AACV,eAAO,EAAE,OAAO;AAChB,aAAK,EAAE,KAAK;KACf,CAAC;;AAEF,WAAO,QAAQ,CAAC;CACnB;;AAED,SAAS,CAAC,qBAAqB,GAAG,WAAW,CAAC;qBAC/B,8BAAa,mBAAmB,CAAC,SAAS,CAAC","file":"InitCache.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const type = chunk.mediaInfo.type;\n        const quality = chunk.quality;\n\n        data[id] = data[id] || {};\n        data[id][type] = data[id][type] || {};\n        data[id][type][quality] = chunk;\n    }\n\n    function extract (streamId, mediaType, quality) {\n        return data[streamId][mediaType][quality];\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n"]}