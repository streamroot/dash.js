{"version":3,"sources":["../../../../../src/streaming/utils/URLUtils.js"],"names":[],"mappings":"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","file":"URLUtils.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module URLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            // this will throw if baseurl is undefined, invalid etc\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        var baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n              base.charAt(base.length - 1) !== '/' &&\n              url.charAt(0) !== '/' ?\n              '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); //jshint ignore:line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl:   parseBaseUrl,\n        parseOrigin:    parseOrigin,\n        isRelative:     isRelative,\n        isPathAbsolute: isPathAbsolute,\n        isHTTPURL:      isHTTPURL,\n        resolve:        resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nexport default FactoryMaker.getSingletonFactory(URLUtils);\n"]}