{"version":3,"sources":["../../../../../src/streaming/utils/TTMLParser.js"],"names":[],"mappings":"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","file":"TTMLParser.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport Debug from '../../core/Debug';\n\nconst SECONDS_IN_HOUR = 60 * 60; // Expression of an hour in seconds\nconst SECONDS_IN_MIN = 60; // Expression of a minute in seconds\n\nfunction TTMLParser() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n\n    /*\n     * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n     * */\n    let instance,\n        timingRegex,\n        ttml, // contains the whole ttml document received\n        ttmlStyling, // contains the styling information from the document (from head following EBU-TT-D)\n        ttmlLayout, // contains the positioning information from the document (from head following EBU-TT-D)\n        fontSize,\n        lineHeight,\n        linePadding,\n        defaultLayoutProperties,\n        defaultStyleProperties,\n        fontFamilies,\n        textAlign,\n        multiRowAlign,\n        wrapOption,\n        unicodeBidi,\n        displayAlign,\n        writingMode,\n        videoModel,\n        converter;\n\n    let cueCounter = 0; // Used to give every cue a unique ID.\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    /**\n     * Get the begin-end interval if present, or null otherwise.\n     *\n     * @param {Object} element - TTML element which may have begin and end attributes\n     */\n    function getInterval(element) {\n        if (element.hasOwnProperty('begin') && element.hasOwnProperty('end')) {\n            let beginTime = parseTimings(element.begin);\n            let endTime = parseTimings(element.end);\n            return [beginTime, endTime];\n        } else {\n            return null;\n        }\n    }\n\n    function getCueID() {\n        let id = 'cue_TTML_' + cueCounter;\n        cueCounter++;\n        return id;\n    }\n\n    /*\n    * Create list of intervals where spans start and end. Empty list if no times.\n    * Clip to interval using startInterval and endInterval and add these two times.\n    * Also support case when startInterval/endInteval not given (sideloaded file)\n    *\n    * @param {Array} spans - array of span elements\n    */\n    function createSpanIntervalList(spans, startInterval, endInterval) {\n\n        let spanChangeTimes = [];\n        let spanChangeTimeStrings = [];\n        let cue_intervals = [];\n\n        function addSpanTime(span, name) {\n            if (span.hasOwnProperty(name)) {\n                let timeString = span[name];\n                if (spanChangeTimeStrings.indexOf(timeString) < 0) {\n                    spanChangeTimeStrings.push(timeString);\n                }\n            }\n        }\n\n        for (let i = 0; i < spans.length; i++) {\n            let span = spans[i];\n            addSpanTime(span, 'begin');\n            addSpanTime(span, 'end');\n        }\n        if (spanChangeTimeStrings.length === 0) {\n            return cue_intervals; // No span timing so no intervals.\n        }\n\n        if (typeof startInterval !== 'undefined' && typeof endInterval !== 'undefined' ) {\n            for (let i = 0; i < spanChangeTimeStrings.length; i++) {\n                let changeTime = parseTimings(spanChangeTimeStrings[i]);\n                if (startInterval < changeTime && changeTime < endInterval) {\n                    spanChangeTimes.push(changeTime);\n                }\n            }\n            spanChangeTimes.push(startInterval);\n            spanChangeTimes.push(endInterval);\n        } else {\n            for (let i = 0; i < spanChangeTimeStrings.length; i++) {\n                spanChangeTimes.push(parseTimings(spanChangeTimeStrings[i]));\n            }\n        }\n        spanChangeTimes.sort(function (a, b) { return a - b;});\n        for (let i = 0; i < spanChangeTimes.length - 1; i++) {\n            cue_intervals.push([spanChangeTimes[i], spanChangeTimes[i + 1]]);\n        }\n        return cue_intervals;\n    }\n\n\n    function clipStartTime(startTime, intervalStart) {\n        if (typeof startInterval !== 'undefined') {\n            if (startTime < intervalStart) {\n                startTime = intervalStart;\n            }\n        }\n        return startTime;\n    }\n\n\n    function clipEndTime(endTime, intervalEnd) {\n        if (typeof intervalEnd !== 'undefined') {\n            if (endTime > intervalEnd) {\n                endTime = intervalEnd;\n            }\n        }\n        return endTime;\n    }\n\n    /*\n     * Get interval from entity that has begin and end properties.\n     * If intervalStart and intervalEnd defined, use them to clip the interval.\n     * Return null if no overlap with interval\n     */\n    function getClippedInterval(entity, intervalStart, intervalEnd) {\n        let startTime = parseTimings(entity.begin);\n        let endTime = parseTimings(entity.end);\n        startTime = clipStartTime(startTime, intervalStart);\n        endTime = clipEndTime(endTime, intervalEnd);\n        if (typeof intervalStart !== 'undefined' && typeof intervalEnd !== 'undefined') {\n            if (endTime < intervalStart || startTime > intervalEnd) {\n                log('TTML: Cue ' + startTime + '-' + endTime + ' outside interval ' +\n                            intervalStart + '-' + intervalEnd);\n                return null;\n            }\n        }\n        return [startTime, endTime];\n    }\n\n    /*\n     * Check if entity timing has some overlap with interval\n     */\n    function inIntervalOrNoTiming(entity, interval) {\n        let inInterval = true;\n        if (entity.hasOwnProperty('span')) {\n            let entityInterval = getInterval(entity.span);\n            if (entityInterval !== null) { //Timing\n                inInterval = (entityInterval[0] < interval[1] && entityInterval[1] > interval[0]);\n            }\n        }\n        return inInterval;\n    }\n\n    /**\n     * Parse the raw data and process it to return the HTML element representing the cue.\n     * Return the region to be processed and controlled (hide/show) by the caption controller.\n     * @param {string} data - raw data received from the TextSourceBuffer\n     * @param {number} intervalStart\n     * @param {number} intervalEnd\n     * @param {array} imageArray - images represented as binary strings\n     */\n\n    function parse(data, intervalStart, intervalEnd, imageArray) {\n        let tt, // Top element\n            head, // head in tt\n            body, // body in tt\n            ttExtent, // extent attribute of tt element\n            type,\n            i;\n\n        var errorMsg = '';\n\n        // Parse the TTML in a JSON object.\n        ttml = converter.xml_str2json(data);\n\n        if (!ttml) {\n            throw new Error('TTML document could not be parsed');\n        }\n\n        if (videoModel.getTTMLRenderingDiv()) {\n            type = 'html';\n        }\n\n        // Check the document and compare to the specification (TTML and EBU-TT-D).\n        tt = ttml.tt;\n        if (!tt) {\n            throw new Error('TTML document lacks tt element');\n        }\n\n        // Get the namespace if there is one defined in the JSON object.\n        var ttNS = getNamespacePrefix(tt, 'http://www.w3.org/ns/ttml');\n\n        // Remove the namespace before each node if it exists:\n        if (ttNS) {\n            removeNamespacePrefix(tt, ttNS);\n        }\n\n        ttExtent = tt['tts:extent']; // Should check that tts is right namespace.\n\n        head = tt.head;\n        if (!head) {\n            throw new Error('TTML document lacks head element');\n        }\n        if (head.layout) {\n            ttmlLayout = head.layout.region_asArray; //Mandatory in EBU-TT-D\n        }\n        if (head.styling) {\n            ttmlStyling = head.styling.style_asArray; // Mandatory in EBU-TT-D\n        }\n\n        let imageDataUrls = {};\n\n        if (imageArray) {\n            for (i = 0; i < imageArray.length; i++) {\n                let key = 'urn:mpeg:14496-30:subs:' + (i + 1).toString();\n                let dataUrl = 'data:image/png;base64,' + btoa(imageArray[i]);\n                imageDataUrls[key] = dataUrl;\n            }\n        }\n\n        if (head.metadata) {\n            let embeddedImages = head.metadata.image_asArray; // Handle embedded images\n            if (embeddedImages) {\n                for (i = 0; i < embeddedImages.length; i++) {\n                    let key = '#' + embeddedImages[i]['xml:id'];\n                    let imageType = embeddedImages[i].imagetype.toLowerCase();\n                    let dataUrl = 'data:image/' + imageType + ';base64,' + embeddedImages[i].__text;\n                    imageDataUrls[key] = dataUrl;\n                }\n            }\n        }\n\n        body = tt.body;\n        if (!body) {\n            throw new Error('TTML document lacks body element');\n        }\n\n        // Extract the cellResolution information\n        var cellResolution = getCellResolution();\n\n        // Recover the video width and height displayed by the player.\n        var videoWidth = videoModel.getElement().clientWidth;\n        var videoHeight = videoModel.getElement().clientHeight;\n\n        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n        var cellUnit = [videoWidth / cellResolution[0], videoHeight / cellResolution[1]];\n        defaultStyleProperties['font-size'] = cellUnit[1] + 'px;';\n\n        var regions = [];\n        if (ttmlLayout) {\n            for (i = 0; i < ttmlLayout.length; i++) {\n                regions.push(processRegion(JSON.parse(JSON.stringify(ttmlLayout[i])), cellUnit));\n            }\n        }\n\n        // Get the namespace prefix.\n        var nsttp = getNamespacePrefix(ttml.tt, 'http://www.w3.org/ns/ttml#parameter');\n\n        // Set the framerate.\n        if (tt.hasOwnProperty(nsttp + ':frameRate')) {\n            tt.frameRate = parseInt(tt[nsttp + ':frameRate'], 10);\n        }\n        var captionArray = [];\n        // Extract the div\n        var divs = tt.body_asArray[0].__children;\n\n        // Timing is either on div, paragraph or span level.\n\n        for (let k = 0; k < divs.length; k++) {\n            let div = divs[k].div;\n            let divInterval = null; // This is mainly for image subtitles.\n\n            if (null !== (divInterval = getInterval(div))) {\n                // Timing on div level is not allowed by EBU-TT-D.\n                // We only use it for SMPTE-TT image subtitle profile.\n\n                // Layout should be defined by a region. Given early test material, we also support that it is on\n                // div level\n                let layout;\n                if (div.region) {\n                    let region = findRegionFromID(ttmlLayout, div.region);\n                    layout = getRelativePositioning(region, ttExtent);\n                }\n                if (!layout) {\n                    layout = getRelativePositioning(div, ttExtent);\n                }\n\n                let imgKey = div['smpte:backgroundImage'];\n                if (imgKey !== undefined && imageDataUrls[imgKey] !== undefined) {\n                    captionArray.push({\n                        start: divInterval[0],\n                        end: divInterval[1],\n                        id: getCueID(),\n                        data: imageDataUrls[imgKey],\n                        type: 'image',\n                        layout: layout\n                    });\n                }\n                continue; // Next div\n            }\n\n            let paragraphs = div.p_asArray;\n            // Check if cues is not empty or undefined.\n            if (divInterval === null && (!paragraphs || paragraphs.length === 0)) {\n                errorMsg = 'TTML has div that contains no timing and no paragraphs.';\n                log(errorMsg);\n                return captionArray;\n            }\n\n            for (let j2 = 0; j2 < paragraphs.length; j2++) {\n                let paragraph = paragraphs[j2];\n                let spans = paragraph.span_asArray;\n                let cueIntervals = [];\n                // For timing, the overall goal is to find the intervals where there should be cues\n                // The timing may either be on paragraph or span level.\n                if (paragraph.hasOwnProperty('begin') && paragraph.hasOwnProperty('end')) {\n                    // Timing on paragraph level\n                    let clippedInterval = getClippedInterval(paragraph, intervalStart, intervalEnd);\n                    if (clippedInterval !== null) {\n                        cueIntervals.push(clippedInterval);\n                    }\n                } else {\n                    // Timing must be on span level\n                    cueIntervals = createSpanIntervalList(spans, intervalStart, intervalEnd);\n                }\n                if (cueIntervals.length === 0) {\n                    errorMsg = 'TTML: Empty paragraph';\n                    continue; // Nothing in this paragraph\n                }\n\n                let paragraphChildren = paragraph.__children;\n\n                for (let i2 = 0; i2 < cueIntervals.length; i2++) {\n                    let interval = cueIntervals[i2];\n                    let childrenInInterval = [];\n                    for (let k2 = 0; k2 < paragraphChildren.length; k2++) {\n                        let child = paragraphChildren[k2];\n                        if (inIntervalOrNoTiming(child, interval)) {\n                            childrenInInterval.push(child);\n                        }\n                    }\n                    if (childrenInInterval.length === 0) {\n                        continue; // No children to render\n                    }\n\n                    if (type === 'html') {\n                        lineHeight = {};\n                        linePadding = {};\n                        fontSize = {};\n\n                        /**\n                         * Find the region defined for the cue.\n                         */\n                        // properties to be put in the \"captionRegion\" HTML element.\n                        var cueRegionProperties = constructCueRegion(paragraph, div, cellUnit);\n\n                        /**\n                         * Find the style defined for the cue.\n                         */\n                        // properties to be put in the \"paragraph\" HTML element.\n                        var cueStyleProperties = constructCueStyle(paragraph, cellUnit);\n\n                        /**\n                         * /!\\ Create the cue HTML Element containing the whole cue.\n                         */\n                        var styleIDs = cueStyleProperties[1];\n                        cueStyleProperties = cueStyleProperties[0];\n\n                        // Final cue HTML element.\n                        var cueParagraph = document.createElement('div');\n                        cueParagraph.className = styleIDs;\n\n                        // Create a wrapper containing the cue information about unicodeBidi and direction\n                        // as they need to be defined on at this level.\n                        // We append to the wrapper the cue itself.\n                        var cueDirUniWrapper = constructCue(childrenInInterval, cellUnit);\n                        cueDirUniWrapper.className = 'cueDirUniWrapper';\n\n                        // If the style defines these two properties, we place them in cueContainer\n                        // and delete them from the cue style so it is not added afterwards to the final cue.\n                        if (arrayContains('unicode-bidi', cueStyleProperties)) {\n                            cueDirUniWrapper.style.cssText += getPropertyFromArray('unicode-bidi', cueStyleProperties);\n                            deletePropertyFromArray('unicode-bidi', cueStyleProperties);\n                        }\n                        if (arrayContains('direction', cueStyleProperties)) {\n                            cueDirUniWrapper.style.cssText += getPropertyFromArray('direction', cueStyleProperties);\n                            deletePropertyFromArray('direction', cueStyleProperties);\n                        }\n\n                        // Apply the linePadding property if it is specified in the cue style.\n                        if (arrayContains('padding-left', cueStyleProperties) && arrayContains('padding-right', cueStyleProperties)) {\n                            cueDirUniWrapper.innerHTML = applyLinePadding(cueDirUniWrapper, cueStyleProperties);\n                        }\n\n                        /**\n                         * Clean and set the style and region for the cue to be returned.\n                         */\n\n                        // Remove the line padding property from being added at the \"paragraph\" element level.\n                        if (arrayContains('padding-left', cueStyleProperties) && arrayContains('padding-right', cueStyleProperties)) {\n                            deletePropertyFromArray('padding-left', cueStyleProperties);\n                            deletePropertyFromArray('padding-right', cueStyleProperties);\n                        }\n\n                        // Remove the ID of the region from being added at the \"paragraph\" element level.\n                        var regionID = '';\n                        if (arrayContains('regionID', cueRegionProperties)) {\n                            var wholeRegionID = getPropertyFromArray('regionID', cueRegionProperties);\n                            regionID = wholeRegionID.slice(wholeRegionID.indexOf(':') + 1, wholeRegionID.length - 1);\n                        }\n\n                        // We link the p style to the finale cueParagraph element.\n                        if (cueStyleProperties) {\n                            cueParagraph.style.cssText = cueStyleProperties.join(' ') + 'display:flex;';\n                        }\n                        // We define the CSS style for the cue region.\n                        if (cueRegionProperties) {\n                            cueRegionProperties = cueRegionProperties.join(' ');\n                        }\n\n                        // We then place the cue wrapper inside the paragraph element.\n                        cueParagraph.appendChild(cueDirUniWrapper);\n\n                        // Final cue.\n                        var finalCue = document.createElement('div');\n                        finalCue.appendChild(cueParagraph);\n                        finalCue.id = getCueID();\n                        finalCue.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n                        if (Object.keys(fontSize).length === 0) {\n                            fontSize.defaultFontSize = '100';\n                        }\n\n                        // We add all the cue information in captionArray.\n                        captionArray.push({\n                            start: interval[0],\n                            end: interval[1],\n                            type: 'html',\n                            cueHTMLElement: finalCue,\n                            regions: regions,\n                            regionID: regionID,\n                            cueID: finalCue.id,\n                            videoHeight: videoHeight,\n                            videoWidth: videoWidth,\n                            cellResolution: cellResolution,\n                            fontSize: fontSize || {\n                                defaultFontSize: '100'\n                            },\n                            lineHeight: lineHeight,\n                            linePadding: linePadding\n                        });\n\n                    } else {\n                        var text = '';\n                        var textElements = childrenInInterval;\n                        if (textElements.length) {\n                            textElements.forEach(function (el) {\n                                if (el.hasOwnProperty('span')) {\n                                    var spanElements = el.span.__children;\n                                    spanElements.forEach(function (spanEl) {\n                                        // If metadata is present, do not process.\n                                        if (spanElements.hasOwnProperty('metadata')) {\n                                            return;\n                                        }\n                                        // If the element is a string\n                                        if (spanEl.hasOwnProperty('#text')) {\n                                            text += spanEl['#text'].replace(/[\\r\\n]+/gm, ' ').trim();\n                                            // If the element is a 'br' tag\n                                        } else if ('br' in spanEl) {\n                                            // Create a br element.\n                                            text += '\\n';\n                                        }\n                                    });\n                                } else if (el.hasOwnProperty('br')) {\n                                    text += '\\n';\n                                } else {\n                                    text += el['#text'].replace(/[\\r\\n]+/gm, ' ').trim();\n                                }\n                            });\n                        }\n\n                        captionArray.push({\n                            start: interval[0],\n                            end: interval[1],\n                            data: text,\n                            type: 'text'\n                        });\n                    }\n                }\n            }\n        }\n\n        if (errorMsg !== '') {\n            log(errorMsg);\n        }\n\n        if (captionArray.length > 0) {\n            return captionArray;\n        } else { // This seems too strong given that there are segments with no TTML subtitles\n            throw new Error(errorMsg);\n        }\n    }\n\n    function setup() {\n        /*\n         * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n         * */\n        timingRegex = /^([0-9][0-9]+):([0-5][0-9]):([0-5][0-9])|(60)(\\.([0-9])+)?$/; // Regex defining the time\n        fontSize = {};\n        lineHeight = {};\n        linePadding = {};\n        defaultLayoutProperties = {\n            'top': 'auto;',\n            'left': 'auto;',\n            'width': '90%;',\n            'height': '10%;',\n            'align-items': 'flex-start;',\n            'overflow': 'visible;',\n            '-ms-writing-mode': 'lr-tb, horizontal-tb;',\n            '-webkit-writing-mode': 'horizontal-tb;',\n            '-moz-writing-mode': 'horizontal-tb;',\n            'writing-mode': 'horizontal-tb;'\n        };\n        defaultStyleProperties = {\n            'color': 'rgb(255,255,255);',\n            'direction': 'ltr;',\n            'font-family': 'monospace, sans-serif;',\n            'font-style': 'normal;',\n            'line-height': 'normal;',\n            'font-weight': 'normal;',\n            'text-align': 'start;',\n            'justify-content': 'flex-start;',\n            'text-decoration': 'none;',\n            'unicode-bidi': 'normal;',\n            'white-space': 'normal;',\n            'width': '100%;'\n        };\n        fontFamilies = {\n            monospace: 'font-family: monospace;',\n            sansSerif: 'font-family: sans-serif;',\n            serif: 'font-family: serif;',\n            monospaceSansSerif: 'font-family: monospace, sans-serif;',\n            monospaceSerif: 'font-family: monospace, serif;',\n            proportionalSansSerif: 'font-family: Arial;',\n            proportionalSerif: 'font-family: Times New Roman;',\n            'default': 'font-family: monospace, sans-serif;'\n        };\n        textAlign = {\n            right: ['justify-content: flex-end;', 'text-align: right;'],\n            start: ['justify-content: flex-start;', 'text-align: start;'],\n            center: ['justify-content: center;', 'text-align: center;'],\n            end: ['justify-content: flex-end;', 'text-align: end;'],\n            left: ['justify-content: flex-start;', 'text-align: left;']\n        };\n        multiRowAlign = {\n            start: 'text-align: start;',\n            center: 'text-align: center;',\n            end: 'text-align: end;',\n            auto: ''\n        };\n        wrapOption = {\n            wrap: 'white-space: normal;',\n            noWrap: 'white-space: nowrap;'\n        };\n        unicodeBidi = {\n            normal: 'unicode-bidi: normal;',\n            embed: 'unicode-bidi: embed;',\n            bidiOverride: 'unicode-bidi: bidi-override;'\n        };\n        displayAlign = {\n            before: 'align-items: flex-start;',\n            center: 'align-items: center;',\n            after: 'align-items: flex-end;'\n        };\n        writingMode = {\n            lrtb: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;',\n            rltb: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;' +\n                'direction: rtl;' +\n                'unicode-bidi: bidi-override;',\n            tbrl: '-webkit-writing-mode: vertical-rl;' +\n                'writing-mode: vertical-rl;' +\n                '-webkit-text-orientation: upright;' +\n                'text-orientation: upright;',\n            tblr: '-webkit-writing-mode: vertical-lr;' +\n                'writing-mode: vertical-lr;' +\n                '-webkit-text-orientation: upright;' +\n                'text-orientation: upright;',\n            lr: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;',\n            rl: '-webkit-writing-mode: horizontal-tb;' +\n                'writing-mode: horizontal-tb;' +\n                'direction: rtl;',\n            tb: '-webkit-writing-mode: vertical-rl;' +\n                'writing-mode: vertical-rl;' +\n                '-webkit-text-orientation: upright;' +\n                'text-orientation: upright;'\n        };\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            matchers:           []\n        });\n    }\n\n    function parseTimings(timingStr) {\n        // Test if the time provided by the caption is valid.\n        var test = timingRegex.test(timingStr);\n        var timeParts,\n            parsedTime,\n            frameRate;\n\n        if (!test) {\n            // Return NaN so it will throw an exception at internalParse if the time is incorrect.\n            return NaN;\n        }\n\n        timeParts = timingStr.split(':');\n\n        // Process the timings by decomposing it and converting it in numbers.\n        parsedTime = (parseFloat(timeParts[0]) * SECONDS_IN_HOUR +\n            parseFloat(timeParts[1]) * SECONDS_IN_MIN +\n            parseFloat(timeParts[2]));\n\n        // In case a frameRate is provided, we adjust the parsed time.\n        if (timeParts[3]) {\n            frameRate = ttml.tt.frameRate;\n            if (frameRate && !isNaN(frameRate)) {\n                parsedTime += parseFloat(timeParts[3]) / frameRate;\n            } else {\n                return NaN;\n            }\n        }\n        return parsedTime;\n    }\n\n    function getNamespacePrefix(json, ns) {\n        // Obtain the namespace prefix.\n        var r = Object.keys(json)\n            .filter(function (k) {\n                return (k.split(':')[0] === 'xmlns' || k.split(':')[1] === 'xmlns') && json[k] === ns;\n            }).map(function (k) {\n                return k.split(':')[2] || k.split(':')[1];\n            });\n        if (r.length != 1) {\n            return null;\n        }\n        return r[0];\n    }\n\n    function removeNamespacePrefix(json, nsPrefix) {\n        for (var key in json) {\n            if (json.hasOwnProperty(key)) {\n                if ((typeof json[key] === 'object' || json[key] instanceof Object) && !Array.isArray(json[key])) {\n                    removeNamespacePrefix(json[key], nsPrefix);\n                } else if (Array.isArray(json[key])) {\n                    for (var i = 0; i < json[key].length; i++) {\n                        removeNamespacePrefix(json[key][i], nsPrefix);\n                    }\n                }\n                var fullNsPrefix = nsPrefix + ':';\n                var nsPrefixPos = key.indexOf(fullNsPrefix);\n                if (nsPrefixPos >= 0) {\n                    var newKey = key.slice(nsPrefixPos + fullNsPrefix.length);\n                    json[newKey] = json[key];\n                    delete json[key];\n                }\n            }\n        }\n    }\n\n    // backgroundColor = background-color, convert from camelCase to dash.\n    function camelCaseToDash(key) {\n        return key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    // Convert an RGBA value written in Hex to rgba(v,v,v,a).\n    function convertHexToRGBA(rgba) {\n        // Get the hexadecimal value without the #.\n        var hex = rgba.slice(1);\n        // Separate the values in pairs.\n        var hexMatrice = hex.match(/.{2}/g);\n        // Convert the alpha value in decimal between 0 and 1.\n        var alpha = parseFloat(parseInt((parseInt(hexMatrice[3], 16) / 255) * 1000, 10) / 1000);\n        // Get the standard RGB value.\n        var rgb = hexMatrice.slice(0, 3).map(function (i) {\n            return parseInt(i, 16);\n        });\n        // Return the RGBA value for CSS.\n        return 'rgba(' + rgb.join(',') + ',' + alpha + ');';\n    }\n\n    // Convert an RGBA value written in TTML rgba(v,v,v,a => 0 to 255) to CSS rgba(v,v,v,a => 0 to 1).\n    function convertAlphaValue(rgbaTTML) {\n        let rgba,\n            alpha,\n            resu;\n\n        rgba = rgbaTTML.replace(/^(rgb|rgba)\\(/,'').replace(/\\)$/,'').replace(/\\s/g,'').split(',');\n        alpha = parseInt(rgba[rgba.length - 1], 10) / 255;\n        resu = 'rgba(' + rgba[0] + ',' + rgba[1] + ',' + rgba[2] + ',' + alpha + ');';\n\n        return resu;\n    }\n\n    // Return whether or not an array contains a certain text\n    function arrayContains(text, array) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i].indexOf(text) > -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Return the whole value that contains \"text\"\n    function getPropertyFromArray(text, array) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i].indexOf(text) > -1) {\n                return array[i];\n            }\n        }\n        return null;\n    }\n\n    // Delete a a property from an array.\n    function deletePropertyFromArray(property, array) {\n        array.splice(array.indexOf(getPropertyFromArray(property, array)), 1);\n    }\n\n    function mergeArrays(primeArray, arrayToAdd) {\n        for (var i = 0; i < primeArray.length; i++) {\n            for (var j = 0; j < arrayToAdd.length; j++) {\n                // Take only the name of the property\n                if (primeArray[i]) {\n                    if (primeArray[i].split(':')[0].indexOf(arrayToAdd[j].split(':')[0]) > -1) {\n                        primeArray.splice(i, 1);\n                    }\n                }\n            }\n        }\n        return primeArray.concat(arrayToAdd);\n    }\n\n    function getSizeTypeAndDefinition(cueStyleElement) {\n        let returnTab = new Array(2);\n        let startRef = cueStyleElement.indexOf(':') === -1 ? 0 : cueStyleElement.indexOf(':');\n        let endRef;\n        if (cueStyleElement.indexOf('%') === -1) {\n            if (cueStyleElement.indexOf('c') === -1) {\n                if (cueStyleElement.indexOf('p') === -1) {\n                    returnTab[0] = returnTab[1] = null;\n                } else {\n                    returnTab[0] = 'p';\n                    endRef = cueStyleElement.indexOf('p');\n                }\n            } else {\n                returnTab[0] = 'c';\n                endRef = cueStyleElement.indexOf('c');\n            }\n        } else {\n            returnTab[0] = '%';\n            endRef = cueStyleElement.indexOf('%');\n        }\n        returnTab [1] = cueStyleElement.slice(startRef, endRef);\n        return returnTab;\n    }\n\n    /**\n     * Processing of styling information:\n     * - processStyle: return an array of strings with the cue style under a CSS style form.\n     * - findStyleFromID: Return the unprocessed style from TTMLStyling corresponding to the ID researched.\n     * - getProcessedStyle: Return the processed style(s) from the ID(s) received in entry.\n     * **/\n\n\n    // Compute the style properties to return an array with the cleaned properties.\n    function processStyle(cueStyle, cellUnit, includeRegionStyles) {\n        var properties = [];\n        var valueFtSizeInPx,\n            valueLHSizeInPx;\n\n        // Clean up from the xml2json parsing:\n        for (var key in cueStyle) {\n            if (cueStyle.hasOwnProperty(key)) {\n                //Clean the properties from the parsing.\n                var newKey = key.replace('ebutts:', '');\n                newKey = newKey.replace('xml:', '');\n                newKey = newKey.replace('tts:', '');\n\n                // Clean the properties' names.\n                newKey = camelCaseToDash(newKey);\n                cueStyle[newKey] = cueStyle[key];\n                delete cueStyle[key];\n            }\n        }\n\n        // Line padding is computed from the cellResolution.\n        if ('line-padding' in cueStyle) {\n            var valuePadding = parseFloat(cueStyle['line-padding'].slice(cueStyle['line-padding'].indexOf(':') + 1,\n                cueStyle['line-padding'].indexOf('c')));\n            if ('id' in cueStyle) {\n                linePadding[cueStyle.id] = valuePadding;\n            }\n            var valuePaddingInPx = valuePadding * cellUnit[0] + 'px;';\n            properties.push('padding-left:' + valuePaddingInPx);\n            properties.push('padding-right:' + valuePaddingInPx);\n        }\n        // Font size is computed from the cellResolution.\n        if ('font-size' in cueStyle) {\n            var fontSizeTab = getSizeTypeAndDefinition(cueStyle['font-size']);\n            var valueFtSize = parseFloat(fontSizeTab[1]);\n            if ('id' in cueStyle) {\n                fontSize[cueStyle.id] = fontSizeTab;\n            }\n\n            if (fontSizeTab[0] === '%') {\n                valueFtSizeInPx = valueFtSize / 100 * cellUnit[1] + 'px;';\n            } else if (fontSizeTab[0] === 'c') {\n                valueFtSizeInPx = valueFtSize * cellUnit[1] + 'px;';\n            }\n\n            properties.push('font-size:' + valueFtSizeInPx);\n        }\n        // Line height is computed from the cellResolution.\n        if ('line-height' in cueStyle) {\n            if (cueStyle['line-height'] === 'normal') {\n                properties.push('line-height: normal;');\n            } else {\n                var LineHeightTab = getSizeTypeAndDefinition(cueStyle['line-height']);\n                var valueLHSize = parseFloat(LineHeightTab[1]);\n                if ('id' in cueStyle) {\n                    lineHeight[cueStyle.id] = LineHeightTab;\n                }\n\n                if (LineHeightTab[0] === '%') {\n                    valueLHSizeInPx = valueLHSize / 100 * cellUnit[1] + 'px;';\n                } else if (LineHeightTab[0] === 'c') {\n                    valueLHSizeInPx = valueLHSize * cellUnit[1] + 'px;';\n                }\n\n                properties.push('line-height:' + valueLHSizeInPx);\n            }\n        }\n        // Font-family can be specified by a generic family name or a custom family name.\n        if ('font-family' in cueStyle) {\n            if (cueStyle['font-family'] in fontFamilies) {\n                properties.push(fontFamilies[cueStyle['font-family']]);\n            } else {\n                properties.push('font-family:' + cueStyle['font-family'] + ';');\n            }\n        }\n        // Text align needs to be set from two properties:\n        // The standard text-align CSS property.\n        // The justify-content property as we use flex boxes.\n        if ('text-align' in cueStyle) {\n            if (cueStyle['text-align'] in textAlign) {\n                properties.push(textAlign[cueStyle['text-align']][0]);\n                properties.push(textAlign[cueStyle['text-align']][1]);\n            }\n        }\n        // Multi Row align is set only by the text-align property.\n        // TODO: TO CHECK\n        if ('multi-row-align' in cueStyle) {\n            if (arrayContains('text-align', properties) && cueStyle['multi-row-align'] != 'auto') {\n                deletePropertyFromArray('text-align', properties);\n            }\n            if (cueStyle['multi-row-align'] in multiRowAlign) {\n                properties.push(multiRowAlign[cueStyle['multi-row-align']]);\n            }\n        }\n        // Background color can be specified from hexadecimal (RGB or RGBA) value.\n        var rgbaValue;\n        if ('background-color' in cueStyle) {\n            if (cueStyle['background-color'].indexOf('#') > -1 && (cueStyle['background-color'].length - 1) === 8) {\n                rgbaValue = convertHexToRGBA(cueStyle['background-color']);\n            } else if (cueStyle['background-color'].indexOf('rgba') > -1) {\n                rgbaValue = convertAlphaValue(cueStyle['background-color']);\n            }  else {\n                rgbaValue = cueStyle['background-color'] + ';';\n            }\n            properties.push('background-color: ' + rgbaValue);\n        }\n        // Color can be specified from hexadecimal (RGB or RGBA) value.\n        if ('color' in cueStyle) {\n            if (cueStyle.color.indexOf('#') > -1 && (cueStyle.color.length - 1) === 8) {\n                rgbaValue = convertHexToRGBA(cueStyle.color);\n            } else if (cueStyle.color.indexOf('rgba') > -1) {\n                rgbaValue = convertAlphaValue(cueStyle.color);\n            }  else {\n                rgbaValue = cueStyle.color + ';';\n            }\n            properties.push('color: ' + rgbaValue);\n        }\n        // Wrap option is determined by the white-space CSS property.\n        if ('wrap-option' in cueStyle) {\n            if (cueStyle['wrap-option'] in wrapOption) {\n                properties.push(wrapOption[cueStyle['wrap-option']]);\n            } else {\n                properties.push('white-space:' + cueStyle['wrap-option']);\n            }\n        }\n        // Unicode bidi is determined by the unicode-bidi CSS property.\n        if ('unicode-bidi' in cueStyle) {\n            if (cueStyle['unicode-bidi'] in unicodeBidi) {\n                properties.push(unicodeBidi[cueStyle['unicode-bidi']]);\n            } else {\n                properties.push('unicode-bidi:' + cueStyle['unicode-bidi']);\n            }\n        }\n\n        // Standard properties identical to CSS.\n\n        if ('font-style' in cueStyle) {\n            properties.push('font-style:' + cueStyle['font-style'] + ';');\n        }\n        if ('font-weight' in cueStyle) {\n            properties.push('font-weight:' + cueStyle['font-weight'] + ';');\n        }\n        if ('direction' in cueStyle) {\n            properties.push('direction:' + cueStyle.direction + ';');\n        }\n        if ('text-decoration' in cueStyle) {\n            properties.push('text-decoration:' + cueStyle['text-decoration'] + ';');\n        }\n\n        if (includeRegionStyles) {\n            properties = properties.concat(processRegion(cueStyle, cellUnit));\n        }\n\n        // Handle white-space preserve\n        if (ttml.tt.hasOwnProperty('xml:space')) {\n            if (ttml.tt['xml:space'] === 'preserve') {\n                properties.push('white-space: pre;');\n            }\n        }\n\n        return properties;\n    }\n\n    // Find the style set by comparing the style IDs available.\n    // Return null if no style is found\n    function findStyleFromID(ttmlStyling, cueStyleID) {\n        // For every styles available, search the corresponding style in ttmlStyling.\n        for (var j = 0; j < ttmlStyling.length; j++) {\n            var currStyle = ttmlStyling[j];\n            if (currStyle['xml:id'] === cueStyleID || currStyle.id === cueStyleID) {\n                // Return the style corresponding to the ID in parameter.\n                return currStyle;\n            }\n        }\n        return null;\n    }\n    // Return the computed style from a certain ID.\n    function getProcessedStyle(reference, cellUnit, includeRegionStyles) {\n        var styles = [];\n        var ids = reference.match(/\\S+/g);\n        ids.forEach(function (id) {\n            // Find the style for each id received.\n            var cueStyle = findStyleFromID(ttmlStyling, id);\n            if (cueStyle) {\n                // Process the style for the cue in CSS form.\n                // Send a copy of the style object, so it does not modify the original by cleaning it.\n                var stylesFromId = processStyle(JSON.parse(JSON.stringify(cueStyle)), cellUnit, includeRegionStyles);\n                styles = styles.concat(stylesFromId);\n            }\n        });\n        return styles;\n    }\n\n    // Calculate relative left, top, width, height from extent and origin in percent.\n    // Return object with {left, top, width, height} as numbers in percent or null.\n    function getRelativePositioning(element, ttExtent) {\n\n        let pairRe = /([\\d\\.]+)(%|px)\\s+([\\d\\.]+)(%|px)/;\n\n        if (('tts:extent' in element) && ('tts:origin' in element) ) {\n            let extentParts = pairRe.exec(element['tts:extent']);\n            let originParts = pairRe.exec(element['tts:origin']);\n            if (extentParts === null || originParts === null) {\n                log('Bad extent or origin: ' + element['tts:extent'] + ' ' + element['tts:origin']);\n                return null;\n            }\n            let width = parseFloat(extentParts[1]);\n            let height = parseFloat(extentParts[3]);\n            let left = parseFloat(originParts[1]);\n            let top = parseFloat(originParts[3]);\n\n            if (ttExtent) { // Should give overall scale in pixels\n                let ttExtentParts = pairRe.exec(ttExtent);\n                if (ttExtentParts === null || ttExtentParts[2] !== 'px' || ttExtentParts[4] !== 'px') {\n                    log('Bad tt.extent: ' + ttExtent);\n                    return null;\n                }\n                let exWidth = parseFloat(ttExtentParts[1]);\n                let exHeight = parseFloat(ttExtentParts[3]);\n                if (extentParts[2] === 'px') {\n                    width = width / exWidth * 100;\n                }\n                if (extentParts[4] === 'px') {\n                    height = height / exHeight * 100;\n                }\n                if (originParts[2] === 'px') {\n                    left = left / exWidth * 100;\n                }\n                if (originParts[4] === 'px') {\n                    top = top / exHeight * 100;\n                }\n            }\n            return { 'left': left, 'top': top, 'width': width, 'height': height };\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Processing of layout information:\n     * - processRegion: return an array of strings with the cue region under a CSS style form.\n     * - findRegionFromID: Return the unprocessed region from TTMLLayout corresponding to the ID researched.\n     * - getProcessedRegion: Return the processed region(s) from the ID(s) received in entry.\n     ***/\n\n    // Compute the region properties to return an array with the cleaned properties.\n    function processRegion(cueRegion, cellUnit) {\n        var properties = [];\n\n        // Clean up from the xml2json parsing:\n        for (var key in cueRegion) {\n            //Clean the properties from the parsing.\n            var newKey = key.replace('tts:', '');\n            newKey = newKey.replace('xml:', '');\n\n            // Clean the properties' names.\n            newKey = camelCaseToDash(newKey);\n            cueRegion[newKey] = cueRegion[key];\n            if (newKey !== key) {\n                delete cueRegion[key];\n            }\n        }\n        // Extent property corresponds to width and height\n        if ('extent' in cueRegion) {\n            var coordsExtent = cueRegion.extent.split(/\\s/);\n            properties.push('width: ' + coordsExtent[0] + ';');\n            properties.push('height: ' + coordsExtent[1] + ';');\n        }\n        // Origin property corresponds to top and left\n        if ('origin' in cueRegion) {\n            var coordsOrigin = cueRegion.origin.split(/\\s/);\n            properties.push('left: ' + coordsOrigin[0] + ';');\n            properties.push('top: ' + coordsOrigin[1] + ';');\n        }\n        // DisplayAlign property corresponds to vertical-align\n        if ('display-align' in cueRegion) {\n            properties.push(displayAlign[cueRegion['display-align']]);\n        }\n        // WritingMode is not yet implemented (for CSS3, to come)\n        if ('writing-mode' in cueRegion) {\n            properties.push(writingMode[cueRegion['writing-mode']]);\n        }\n        // Style will give to the region the style properties from the style selected\n        if ('style' in cueRegion) {\n            var styleFromID = getProcessedStyle(cueRegion.style, cellUnit, true);\n            properties = properties.concat(styleFromID);\n        }\n\n        // Standard properties identical to CSS.\n\n        if ('padding' in cueRegion) {\n            properties.push('padding:' + cueRegion.padding + ';');\n        }\n        if ('overflow' in cueRegion) {\n            properties.push('overflow:' + cueRegion.overflow + ';');\n        }\n        if ('show-background' in cueRegion) {\n            properties.push('show-background:' + cueRegion['show-background'] + ';');\n        }\n        if ('id' in cueRegion) {\n            properties.push('regionID:' + cueRegion.id + ';');\n        }\n\n        return properties;\n    }\n\n    // Find the region set by comparing the region IDs available.\n    // Return null if no region is found\n    function findRegionFromID(ttmlLayout, cueRegionID) {\n        // For every region available, search the corresponding style in ttmlLayout.\n        for (var j = 0; j < ttmlLayout.length; j++) {\n            var currReg = ttmlLayout[j];\n            if (currReg['xml:id'] === cueRegionID || currReg.id === cueRegionID) {\n                // Return the region corresponding to the ID in parameter.\n                return currReg;\n            }\n        }\n        return null;\n    }\n\n    // Return the computed region from a certain ID.\n    function getProcessedRegion(reference, cellUnit) {\n        var regions = [];\n        var ids = reference.match(/\\S+/g);\n        ids.forEach(function (id) {\n            // Find the region for each id received.\n            var cueRegion = findRegionFromID(ttmlLayout, id);\n            if (cueRegion) {\n                // Process the region for the cue in CSS form.\n                // Send a copy of the style object, so it does not modify the original by cleaning it.\n                var regionsFromId = processRegion(JSON.parse(JSON.stringify(cueRegion)), cellUnit);\n                regions = regions.concat(regionsFromId);\n            }\n        });\n        return regions;\n    }\n\n    //Return the cellResolution defined by the TTML document.\n    function getCellResolution() {\n        var defaultCellResolution = [32, 15]; // Default cellResolution.\n        if (ttml.tt.hasOwnProperty('ttp:cellResolution')) {\n            return ttml.tt['ttp:cellResolution'].split(' ').map(parseFloat);\n        } else {\n            return defaultCellResolution;\n        }\n    }\n\n    // Return the cue wrapped into a span specifying its linePadding.\n    function applyLinePadding(cueHTML, cueStyle) {\n        // Extract the linePadding property from cueStyleProperties.\n        var linePaddingLeft = getPropertyFromArray('padding-left', cueStyle);\n        var linePaddingRight = getPropertyFromArray('padding-right', cueStyle);\n        var linePadding = linePaddingLeft.concat(' ' + linePaddingRight + ' ');\n\n        // Declaration of the HTML elements to be used in the cue innerHTML construction.\n        var outerHTMLBeforeBr = '';\n        var outerHTMLAfterBr = '';\n        var cueInnerHTML = '';\n\n        // List all the nodes of the subtitle.\n        var nodeList = Array.prototype.slice.call(cueHTML.children);\n        // Take a br element as reference.\n        var brElement = cueHTML.getElementsByClassName('lineBreak')[0];\n        // First index of the first br element.\n        var idx = nodeList.indexOf(brElement);\n        // array of all the br element indices\n        var indices = [];\n        // Find all the indices of the br elements.\n        while (idx != -1) {\n            indices.push(idx);\n            idx = nodeList.indexOf(brElement, idx + 1);\n        }\n\n        // Strings for the cue innerHTML construction.\n        var spanStringEnd = '<\\/span>';\n        var br = '<br>';\n        var clonePropertyString = '<span' + ' class=\"spanPadding\" ' + 'style=\"-webkit-box-decoration-break: clone; box-decoration-break: clone; ';\n\n        // If br elements are found:\n        if (indices.length) {\n            // For each index of a br element we compute the HTML coming before and/or after it.\n            indices.forEach(function (i, index) {\n                // If this is the first line break, we compute the HTML of the element coming before.\n                if (index === 0) {\n                    var styleBefore = '';\n                    // for each element coming before the line break, we add its HTML.\n                    for (var j = 0; j < i; j++) {\n                        outerHTMLBeforeBr += nodeList[j].outerHTML;\n                        // If this is the first element, we add its style to the wrapper.\n                        if (j === 0) {\n                            styleBefore = linePadding.concat(nodeList[j].style.cssText);\n                        }\n                    }\n                    // The before element will comprises the clone property (for line wrapping), the style that\n                    // need to be applied (ex: background-color) and the rest og the HTML.\n                    outerHTMLBeforeBr = clonePropertyString + styleBefore + '\">' + outerHTMLBeforeBr;\n                }\n                // For every element of the list, we compute the element coming after the line break.s\n                var styleAfter = '';\n                // for each element coming after the line break, we add its HTML.\n                for (var k = i + 1; k < nodeList.length; k++) {\n                    outerHTMLAfterBr += nodeList[k].outerHTML;\n                    // If this is the last element, we add its style to the wrapper.\n                    if (k === nodeList.length - 1) {\n                        styleAfter += linePadding.concat(nodeList[k].style.cssText);\n                    }\n                }\n\n                // The before element will comprises the clone property (for line wrapping), the style that\n                // need to be applied (ex: background-color) and the rest og the HTML.\n                outerHTMLAfterBr = clonePropertyString + styleAfter + '\">' + outerHTMLAfterBr;\n\n                // For each line break we must add the before and/or after element to the final cue as well as\n                // the line break when needed.\n                if (outerHTMLBeforeBr && outerHTMLAfterBr && index === (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd + br + outerHTMLAfterBr + spanStringEnd;\n                } else if (outerHTMLBeforeBr && outerHTMLAfterBr && index !== (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd + br + outerHTMLAfterBr + spanStringEnd + br;\n                } else if (outerHTMLBeforeBr && !outerHTMLAfterBr) {\n                    cueInnerHTML += outerHTMLBeforeBr + spanStringEnd;\n                } else if (!outerHTMLBeforeBr && outerHTMLAfterBr && index === (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLAfterBr + spanStringEnd;\n                } else if (!outerHTMLBeforeBr && outerHTMLAfterBr && index !== (indices.length - 1)) {\n                    cueInnerHTML += outerHTMLAfterBr + spanStringEnd + br;\n                }\n            });\n        } else {\n            // If there is no line break in the subtitle, we simply wrap cue in a span indicating the linePadding.\n            var style = '';\n            for (var k = 0; k < nodeList.length; k++) {\n                style += nodeList[k].style.cssText;\n            }\n            cueInnerHTML = clonePropertyString + linePadding + style + '\">' + cueHTML.innerHTML + spanStringEnd;\n        }\n        return cueInnerHTML;\n    }\n\n    /*\n    * Create the cue element\n     * I. The cues are text only:\n     *      i) The cue contains a 'br' element\n     *      ii) The cue contains a span element\n     *      iii) The cue contains text\n     */\n\n    function constructCue(cueElements, cellUnit) {\n        var cue = document.createElement('div');\n        cueElements.forEach(function (el) {\n            // If metadata is present, do not process.\n            if (el.hasOwnProperty('metadata')) {\n                return;\n            }\n\n            /**\n             * If the p element contains spans: create the span elements.\n             */\n            if (el.hasOwnProperty('span')) {\n\n                // Stock the span subtitles in an array (in case there are only one value).\n                var spanElements = el.span.__children;\n\n                // Create the span element.\n                var spanHTMLElement = document.createElement('span');\n                // Extract the style of the span.\n                if (el.span.hasOwnProperty('style')) {\n                    var spanStyle = getProcessedStyle(el.span.style, cellUnit);\n                    spanHTMLElement.className = 'spanPadding ' + el.span.style;\n                    spanHTMLElement.style.cssText = spanStyle.join(' ');\n                }\n\n\n                // if the span has more than one element, we check for each of them their nature (br or text).\n                spanElements.forEach(function (spanEl) {\n                    // If metadata is present, do not process.\n                    if (spanElements.hasOwnProperty('metadata')) {\n                        return;\n                    }\n                    // If the element is a string\n                    if (spanEl.hasOwnProperty('#text')) {\n                        var textNode = document.createTextNode(spanEl['#text']);\n                        spanHTMLElement.appendChild(textNode);\n                        // If the element is a 'br' tag\n                    } else if ('br' in spanEl) {\n                        // To handle br inside span we need to add the current span\n                        // to the cue and then create a br and add that the cue\n                        // then create a new span that we use for the next line of\n                        // text, that is a copy of the current span\n\n                        // Add the current span to the cue, only if it has childNodes (text)\n                        if (spanHTMLElement.hasChildNodes()) {\n                            cue.appendChild(spanHTMLElement);\n                        }\n\n                        // Create a br and add that to the cue\n                        var brEl = document.createElement('br');\n                        brEl.className = 'lineBreak';\n                        cue.appendChild(brEl);\n\n                        // Create an replacement span and copy the style and classname from the old one\n                        var newSpanHTMLElement = document.createElement('span');\n                        newSpanHTMLElement.className = spanHTMLElement.className;\n                        newSpanHTMLElement.style.cssText = spanHTMLElement.style.cssText;\n\n                        // Replace the current span with the one we just created\n                        spanHTMLElement = newSpanHTMLElement;\n                    }\n                });\n                // We append the element to the cue container.\n                cue.appendChild(spanHTMLElement);\n            }\n\n            /**\n             * Create a br element if there is one in the cue.\n             */\n            else if (el.hasOwnProperty('br')) {\n                // We append the line break to the cue container.\n                var brEl = document.createElement('br');\n                brEl.className = 'lineBreak';\n                cue.appendChild(brEl);\n            }\n\n            /**\n             * Add the text that is not in any inline element\n             */\n            else if (el.hasOwnProperty('#text')) {\n                // Add the text to an individual span element (to add line padding if it is defined).\n                var textNode = document.createElement('span');\n                textNode.textContent = el['#text'];\n\n                // We append the element to the cue container.\n                cue.appendChild(textNode);\n            }\n        });\n        return cue;\n    }\n\n    function constructCueRegion(cue, div, cellUnit) {\n        var cueRegionProperties = []; // properties to be put in the \"captionRegion\" HTML element\n        // Obtain the region ID(s) assigned to the cue.\n        var pRegionID = cue.region;\n        // If div has a region.\n        var divRegionID = div.region;\n\n        var divRegion;\n        var pRegion;\n\n        // If the div element reference a region.\n        if (divRegionID) {\n            divRegion = getProcessedRegion(divRegionID, cellUnit);\n        }\n        // If the p element reference a region.\n        if (pRegionID) {\n            pRegion = cueRegionProperties.concat(getProcessedRegion(pRegionID, cellUnit));\n            if (divRegion) {\n                cueRegionProperties = mergeArrays(divRegion, pRegion);\n            } else {\n                cueRegionProperties = pRegion;\n            }\n        } else if (divRegion) {\n            cueRegionProperties = divRegion;\n        }\n\n        // Add initial/default values to what's not defined in the layout:\n        applyDefaultProperties(cueRegionProperties, defaultLayoutProperties);\n\n        return cueRegionProperties;\n    }\n\n    function constructCueStyle(cue, cellUnit) {\n        var cueStyleProperties = []; // properties to be put in the \"paragraph\" HTML element\n        // Obtain the style ID(s) assigned to the cue.\n        var pStyleID = cue.style;\n        // If body has a style.\n        var bodyStyleID = ttml.tt.body.style;\n        // If div has a style.\n        var divStyleID = ttml.tt.body.div.style;\n\n        var bodyStyle;\n        var divStyle;\n        var pStyle;\n        var styleIDs = '';\n\n        // If the body element reference a style.\n        if (bodyStyleID) {\n            bodyStyle = getProcessedStyle(bodyStyleID, cellUnit);\n            styleIDs = 'paragraph ' + bodyStyleID;\n        }\n\n        // If the div element reference a style.\n        if (divStyleID) {\n            divStyle = getProcessedStyle(divStyleID, cellUnit);\n            if (bodyStyle) {\n                divStyle = mergeArrays(bodyStyle, divStyle);\n                styleIDs += ' ' + divStyleID;\n            } else {\n                styleIDs = 'paragraph ' + divStyleID;\n            }\n        }\n\n        // If the p element reference a style.\n        if (pStyleID) {\n            pStyle = getProcessedStyle(pStyleID, cellUnit);\n            if (bodyStyle && divStyle) {\n                cueStyleProperties = mergeArrays(divStyle, pStyle);\n                styleIDs += ' ' + pStyleID;\n            } else if (bodyStyle) {\n                cueStyleProperties = mergeArrays(bodyStyle, pStyle);\n                styleIDs += ' ' + pStyleID;\n            } else if (divStyle) {\n                cueStyleProperties = mergeArrays(divStyle, pStyle);\n                styleIDs += ' ' + pStyleID;\n            } else {\n                cueStyleProperties = pStyle;\n                styleIDs = 'paragraph ' + pStyleID;\n            }\n        } else if (bodyStyle && !divStyle) {\n            cueStyleProperties = bodyStyle;\n        } else if (!bodyStyle && divStyle) {\n            cueStyleProperties = divStyle;\n        }\n\n\n        // Add initial/default values to what's not defined in the styling:\n        applyDefaultProperties(cueStyleProperties, defaultStyleProperties);\n\n        return [cueStyleProperties, styleIDs];\n    }\n\n    function applyDefaultProperties(array, defaultProperties) {\n        for (var key in defaultProperties) {\n            if (defaultProperties.hasOwnProperty(key)) {\n                if (!arrayContains(key, array)) {\n                    array.push(key + ':' + defaultProperties[key]);\n                }\n            }\n        }\n    }\n\n    instance = {\n        parse: parse,\n        setConfig: setConfig\n    };\n\n    setup();\n    return instance;\n}\nTTMLParser.__dashjs_factory_name = 'TTMLParser';\nexport\ndefault FactoryMaker.getSingletonFactory(TTMLParser);\n"]}