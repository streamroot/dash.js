{"version":3,"sources":["../../../../src/streaming/Stream.js"],"names":[],"mappings":"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","file":"Stream.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport LiveEdgeFinder from './utils/LiveEdgeFinder';\nimport StreamProcessor from './StreamProcessor';\nimport MediaController from './controllers/MediaController';\nimport EventController from './controllers/EventController';\nimport FragmentController from './controllers/FragmentController';\nimport AbrController from './controllers/AbrController';\nimport VideoModel from './models/VideoModel';\nimport MetricsModel from './models/MetricsModel';\nimport PlaybackController from './controllers/PlaybackController';\nimport DashHandler from '../dash/DashHandler';\nimport SegmentBaseLoader from '../dash/SegmentBaseLoader';\nimport WebmSegmentBaseLoader from '../dash/WebmSegmentBaseLoader';\nimport DashMetrics from '../dash/DashMetrics';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport Debug from '../core/Debug';\nimport FactoryMaker from '../core/FactoryMaker';\nimport TextSourceBuffer from './TextSourceBuffer';\n\nfunction Stream(config) {\n\n    const DATA_UPDATE_FAILED_ERROR_CODE = 1;\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let manifestModel = config.manifestModel;\n    let manifestUpdater = config.manifestUpdater;\n    let adapter = config.adapter;\n    let capabilities = config.capabilities;\n    let errHandler = config.errHandler;\n    let timelineConverter = config.timelineConverter;\n    let baseURLController = config.baseURLController;\n\n    let instance,\n        streamProcessors,\n        isStreamActivated,\n        isMediaInitialized,\n        streamInfo,\n        updateError,\n        isUpdating,\n        initialized,\n        protectionController,\n        liveEdgeFinder,\n        playbackController,\n        mediaController,\n        fragmentController,\n        eventController,\n        abrController,\n        textSourceBuffer;\n\n\n    function setup() {\n        streamProcessors = [];\n        isStreamActivated = false;\n        isMediaInitialized = false;\n        streamInfo = null;\n        updateError = {};\n        isUpdating = false;\n        initialized = false;\n\n        liveEdgeFinder = LiveEdgeFinder(context).getInstance();\n        playbackController = PlaybackController(context).getInstance();\n        abrController = AbrController(context).getInstance();\n        mediaController = MediaController(context).getInstance();\n        fragmentController = FragmentController(context).create();\n        textSourceBuffer = TextSourceBuffer(context).getInstance();\n\n        eventBus.on(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n    }\n\n    function initialize(StreamInfo, ProtectionController) {\n        streamInfo = StreamInfo;\n        protectionController = ProtectionController;\n        if (protectionController) {\n            eventBus.on(Events.KEY_ERROR, onProtectionError, instance);\n            eventBus.on(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n            eventBus.on(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n            eventBus.on(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n            eventBus.on(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Activates Stream by re-initializing some of its components\n     * @param {MediaSource} mediaSource\n     * @memberof Stream#\n     */\n    function activate(mediaSource) {\n        if (!isStreamActivated) {\n            eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n            initializeMedia(mediaSource);\n            isStreamActivated = true;\n        }\n        //else { // TODO Check track change mode but why is this here. commented it out for now to check.\n        //    createBuffers();\n        //}\n    }\n\n    /**\n     * Partially resets some of the Stream elements\n     * @memberof Stream#\n     */\n    function deactivate() {\n        let ln = streamProcessors.length;\n        for (let i = 0; i < ln; i++) {\n            streamProcessors[i].reset();\n        }\n        streamProcessors = [];\n        isStreamActivated = false;\n        isMediaInitialized = false;\n        clearEventController();\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n    }\n\n    function reset() {\n\n        if (playbackController) {\n            playbackController.pause();\n            playbackController = null;\n        }\n\n        if (fragmentController) {\n            fragmentController.reset();\n            fragmentController = null;\n        }\n\n        deactivate();\n        mediaController = null;\n        abrController = null;\n        manifestUpdater = null;\n        manifestModel = null;\n        adapter = null;\n        capabilities = null;\n        log = null;\n        errHandler = null;\n        isUpdating = false;\n        initialized = false;\n        updateError = {};\n\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.off(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.off(Events.KEY_ERROR, onProtectionError, instance);\n        eventBus.off(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n        eventBus.off(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n        eventBus.off(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n        eventBus.off(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n    }\n\n    function getDuration() {\n        return streamInfo.duration;\n    }\n\n    function getStartTime() {\n        return streamInfo.start;\n    }\n\n    function getStreamIndex() {\n        return streamInfo.index;\n    }\n\n    function getId() {\n        return streamInfo.id;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function hasMedia(type) {\n        return (getMediaInfo(type) !== null);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getBitrateListFor(type) {\n        var mediaInfo = getMediaInfo(type);\n        return abrController.getBitrateList(mediaInfo);\n    }\n\n    function startEventController() {\n        if (eventController) {\n            eventController.start();\n        }\n    }\n\n    function clearEventController() {\n        if (eventController) {\n            eventController.clear();\n        }\n    }\n\n    function isActivated() {\n        return isStreamActivated;\n    }\n\n    function isInitialized() {\n        return initialized;\n    }\n\n    function onProtectionError(event) {\n        if (event.error) {\n            errHandler.mediaKeySessionError(event.error);\n            log(event.error);\n            reset();\n        }\n    }\n\n    function getMimeTypeOrType(mediaInfo) {\n        return mediaInfo.type === 'text' ? mediaInfo.mimeType : mediaInfo.type;\n    }\n\n    function isMediaSupported(mediaInfo, mediaSource, manifest) {\n        var type = mediaInfo.type;\n        var codec,\n            msg;\n\n        if (type === 'muxed' && mediaInfo) {\n            msg = 'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';\n            log(msg);\n            errHandler.manifestError(msg, 'multiplexedrep', manifestModel.getValue());\n            return false;\n        }\n\n        if ((type === 'text') || (type === 'fragmentedText') || (type === 'embeddedText')) return true;\n\n        codec = mediaInfo.codec;\n        log(type + ' codec: ' + codec);\n\n        if (!!mediaInfo.contentProtection && !capabilities.supportsEncryptedMedia()) {\n            errHandler.capabilityError('encryptedmedia');\n        } else if (!capabilities.supportsCodec(VideoModel(context).getInstance().getElement(), codec)) {\n            msg = type + 'Codec (' + codec + ') is not supported.';\n            errHandler.manifestError(msg, 'codec', manifest);\n            log(msg);\n            return false;\n        }\n\n        return true;\n    }\n\n    function onCurrentTrackChanged(e) {\n        if (e.newMediaInfo.streamInfo.id !== streamInfo.id) return;\n\n        var processor = getProcessorForMediaInfo(e.oldMediaInfo);\n        if (!processor) return;\n\n        var currentTime = playbackController.getTime();\n        var buffer = processor.getBuffer();\n        var mediaInfo = e.newMediaInfo;\n        var manifest = manifestModel.getValue();\n        var idx = streamProcessors.indexOf(processor);\n        var mediaSource = processor.getMediaSource();\n\n        if (mediaInfo.type !== 'fragmentedText') {\n            processor.reset(true);\n            createStreamProcessor(mediaInfo, manifest, mediaSource, {buffer: buffer, replaceIdx: idx, currentTime: currentTime});\n            playbackController.seek(playbackController.getTime());\n        }else {\n            processor.updateMediaInfo(manifest, mediaInfo);\n        }\n    }\n\n    function isWebM (mimeType) {\n        let type = mimeType.split('/')[1];\n\n        return 'webm' === type.toLowerCase();\n    }\n\n    function createIndexHandler(mediaInfo) {\n\n        let segmentBaseLoader = isWebM(mediaInfo.mimeType) ? WebmSegmentBaseLoader(context).getInstance() : SegmentBaseLoader(context).getInstance();\n        segmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            metricsModel: MetricsModel(context).getInstance()\n        });\n        segmentBaseLoader.initialize();\n\n        let handler = DashHandler(context).create({\n            segmentBaseLoader: segmentBaseLoader,\n            timelineConverter: timelineConverter,\n            dashMetrics: DashMetrics(context).getInstance(),\n            metricsModel: MetricsModel(context).getInstance(),\n            baseURLController: baseURLController\n        });\n\n        return handler;\n    }\n\n    function createStreamProcessor(mediaInfo, manifest, mediaSource, optionalSettings) {\n        var streamProcessor = StreamProcessor(context).create({\n            indexHandler: createIndexHandler(mediaInfo),\n            timelineConverter: timelineConverter,\n            adapter: adapter,\n            manifestModel: manifestModel\n        });\n\n        var allMediaForType = adapter.getAllMediaInfoForType(manifest, streamInfo, mediaInfo.type);\n        streamProcessor.initialize(getMimeTypeOrType(mediaInfo), fragmentController, mediaSource, instance, eventController);\n        abrController.updateTopQualityIndex(mediaInfo);\n\n        if (optionalSettings) {\n            streamProcessor.setBuffer(optionalSettings.buffer);\n            streamProcessor.getIndexHandler().setCurrentTime(optionalSettings.currentTime);\n            streamProcessors[optionalSettings.replaceIdx] = streamProcessor;\n        } else {\n            streamProcessors.push(streamProcessor);\n        }\n\n        if ((mediaInfo.type === 'text' || mediaInfo.type === 'fragmentedText')) {\n            var idx;\n            for (var i = 0; i < allMediaForType.length; i++) {\n                if (allMediaForType[i].index === mediaInfo.index) {\n                    idx = i;\n                }\n                streamProcessor.updateMediaInfo(manifest, allMediaForType[i]);//creates text tracks for all adaptations in one stream processor\n            }\n            if (mediaInfo.type === 'fragmentedText') {\n                streamProcessor.updateMediaInfo(manifest, allMediaForType[idx]);//sets the initial media info\n            }\n        }else {\n            streamProcessor.updateMediaInfo(manifest, mediaInfo);\n        }\n\n        return streamProcessor;\n    }\n\n    function initializeMediaForType(type, mediaSource) {\n        var manifest = manifestModel.getValue();\n        var allMediaForType = adapter.getAllMediaInfoForType(manifest, streamInfo, type);\n\n        var mediaInfo = null;\n        var initialMediaInfo;\n\n        if (!allMediaForType || allMediaForType.length === 0) {\n            log('No ' + type + ' data.');\n            return;\n        }\n\n        for (var i = 0, ln = allMediaForType.length; i < ln; i++) {\n            mediaInfo = allMediaForType[i];\n\n            if (type === 'embeddedText') {\n                textSourceBuffer.addEmbeddedTrack(mediaInfo);\n            } else {\n                if (!isMediaSupported(mediaInfo, mediaSource, manifest)) continue;\n\n                if (mediaController.isMultiTrackSupportedByType(mediaInfo.type)) {\n                    mediaController.addTrack(mediaInfo, streamInfo);\n                }\n            }\n        }\n\n        if (type === 'embeddedText' || mediaController.getTracksFor(type, streamInfo).length === 0) {\n            return;\n        }\n\n        mediaController.checkInitialMediaSettingsForType(type, streamInfo);\n        initialMediaInfo = mediaController.getCurrentTrackFor(type, streamInfo);\n\n        // TODO : How to tell index handler live/duration?\n        // TODO : Pass to controller and then pass to each method on handler?\n\n        createStreamProcessor(initialMediaInfo, manifest, mediaSource);\n    }\n\n    function initializeMedia(mediaSource) {\n        var manifest = manifestModel.getValue();\n        var events;\n\n        eventController = EventController(context).getInstance();\n        eventController.initialize();\n        eventController.setConfig({\n            manifestModel: manifestModel,\n            manifestUpdater: manifestUpdater\n        });\n        events = adapter.getEventsFor(manifest, streamInfo);\n        eventController.addInlineEvents(events);\n\n        isUpdating = true;\n        initializeMediaForType('video', mediaSource);\n        initializeMediaForType('audio', mediaSource);\n        initializeMediaForType('text', mediaSource);\n        initializeMediaForType('fragmentedText', mediaSource);\n        initializeMediaForType('embeddedText', mediaSource);\n        initializeMediaForType('muxed', mediaSource);\n\n        createBuffers();\n\n        //TODO. Consider initialization of TextSourceBuffer here if embeddedText, but no sideloadedText.\n\n        isMediaInitialized = true;\n        isUpdating = false;\n\n        if (streamProcessors.length === 0) {\n            var msg = 'No streams to play.';\n            errHandler.manifestError(msg, 'nostreams', manifest);\n            log(msg);\n        } else {\n            liveEdgeFinder.initialize(timelineConverter, streamProcessors[0]);\n            //log(\"Playback initialized!\");\n            checkIfInitializationCompleted();\n        }\n    }\n\n    function checkIfInitializationCompleted() {\n        var ln = streamProcessors.length;\n        var hasError = !!updateError.audio || !!updateError.video;\n        var error = hasError ? new Error(DATA_UPDATE_FAILED_ERROR_CODE, 'Data update failed', null) : null;\n        var i = 0;\n\n        for (i; i < ln; i++) {\n            if (streamProcessors[i].isUpdating() || isUpdating) return;\n        }\n\n        initialized = true;\n        if (!isMediaInitialized) return;\n        if (protectionController) {\n            protectionController.initialize(manifestModel.getValue(), getMediaInfo('audio'), getMediaInfo('video'));\n        }\n        eventBus.trigger(Events.STREAM_INITIALIZED, {streamInfo: streamInfo, error: error});\n    }\n\n    function getMediaInfo(type) {\n        var ln = streamProcessors.length;\n        var mediaCtrl = null;\n\n        for (var i = 0; i < ln; i++) {\n            mediaCtrl = streamProcessors[i];\n\n            if (mediaCtrl.getType() === type) return mediaCtrl.getMediaInfo();\n        }\n\n        return null;\n    }\n\n    function createBuffers() {\n        for (var i = 0, ln = streamProcessors.length; i < ln; i++) {\n            streamProcessors[i].createBuffer();\n        }\n    }\n\n    function onBufferingCompleted(e) {\n        if (e.streamInfo !== streamInfo) return;\n\n        var processors = getProcessors();\n        var ln = processors.length;\n        var i = 0;\n\n        // if there is at least one buffer controller that has not completed buffering yet do nothing\n        for (i; i < ln; i++) {\n            if (!processors[i].isBufferingCompleted()) return;\n        }\n\n        eventBus.trigger(Events.STREAM_BUFFERING_COMPLETED, {streamInfo: streamInfo});\n    }\n\n    function onDataUpdateCompleted(e) {\n        var sp = e.sender.getStreamProcessor();\n\n        if (sp.getStreamInfo() !== streamInfo) return;\n\n        updateError[sp.getType()] = e.error;\n        checkIfInitializationCompleted();\n    }\n\n    function getProcessorForMediaInfo(mediaInfo) {\n        if (!mediaInfo) return false;\n\n        var processors = getProcessors();\n\n        return processors.filter(function (processor) {\n            return (processor.getType() === mediaInfo.type);\n        })[0];\n    }\n\n    function getProcessors() {\n        var ln = streamProcessors.length;\n        var arr = [];\n        var i = 0;\n\n        var type,\n            controller;\n\n        for (i; i < ln; i++) {\n            controller = streamProcessors[i];\n            type = controller.getType();\n\n            if (type === 'audio' || type === 'video' || type === 'fragmentedText') {\n                arr.push(controller);\n            }\n        }\n\n        return arr;\n    }\n\n    function updateData(updatedStreamInfo) {\n\n        log('Manifest updated... updating data system wide.');\n\n        let manifest = manifestModel.getValue();\n\n        isStreamActivated = false;\n        isUpdating = true;\n        initialized = false;\n        streamInfo = updatedStreamInfo;\n\n        if (eventController) {\n            let events = adapter.getEventsFor(manifest, streamInfo);\n            eventController.addInlineEvents(events);\n        }\n\n        for (let i = 0, ln = streamProcessors.length; i < ln; i++) {\n            let streamProcessor = streamProcessors[i];\n            let mediaInfo = adapter.getMediaInfoForType(manifest, streamInfo, streamProcessor.getType());\n            abrController.updateTopQualityIndex(mediaInfo);\n            streamProcessor.updateMediaInfo(manifest, mediaInfo);\n        }\n\n        isUpdating = false;\n        checkIfInitializationCompleted();\n    }\n\n    instance = {\n        initialize: initialize,\n        activate: activate,\n        deactivate: deactivate,\n        getDuration: getDuration,\n        getStartTime: getStartTime,\n        getStreamIndex: getStreamIndex,\n        getId: getId,\n        getStreamInfo: getStreamInfo,\n        hasMedia: hasMedia,\n        getBitrateListFor: getBitrateListFor,\n        startEventController: startEventController,\n        isActivated: isActivated,\n        isInitialized: isInitialized,\n        updateData: updateData,\n        reset: reset,\n        getProcessors: getProcessors\n    };\n\n    setup();\n    return instance;\n}\n\nStream.__dashjs_factory_name = 'Stream';\nexport default FactoryMaker.getClassFactory(Stream);\n"]}