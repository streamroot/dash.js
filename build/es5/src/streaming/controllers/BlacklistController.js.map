{"version":3,"sources":["../../../../../src/streaming/controllers/BlacklistController.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCA+ByB,yBAAyB;;;;4BAC7B,qBAAqB;;;;AAE1C,SAAS,mBAAmB,CAAC,MAAM,EAAE;;AAEjC,QAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,QAAM,QAAQ,GAAG,+BAAS,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AACtD,QAAM,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;AAC/C,QAAM,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;;AAEvD,aAAS,QAAQ,CAAC,KAAK,EAAE;AACrB,YAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC9C,mBAAO,KAAK,CAAC;SAChB;;AAED,eAAQ,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAE;KAC5C;;AAED,aAAS,GAAG,CAAC,KAAK,EAAE;AAChB,YAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AACjC,mBAAO;SACV;;AAED,iBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAEtB,gBAAQ,CAAC,OAAO,CACZ,eAAe,EACf;AACI,iBAAK,EAAE,KAAK;SACf,CACJ,CAAC;KACL;;AAED,aAAS,YAAY,CAAC,CAAC,EAAE;AACrB,YAAI,CAAC,CAAC,KAAK,EAAE;AACT,eAAG,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;SAClC;KACJ;;AAED,aAAS,KAAK,GAAG;AACb,YAAI,mBAAmB,EAAE;AACrB,oBAAQ,CAAC,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;SACxD;KACJ;;AAED,aAAS,KAAK,GAAG;AACb,iBAAS,GAAG,EAAE,CAAC;KAClB;;AAED,SAAK,EAAE,CAAC;;AAER,WAAO;AACH,WAAG,EAAE,GAAG;AACR,gBAAQ,EAAE,QAAQ;AAClB,aAAK,EAAE,KAAK;KACf,CAAC;CACL;;AAED,mBAAmB,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;qBACnD,8BAAa,eAAe,CAAC,mBAAmB,CAAC","file":"BlacklistController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\n\nfunction BlackListController(config) {\n\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const loadFailedEventName = config.loadFailedEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(\n            updateEventName,\n            {\n                entry: entry\n            }\n        );\n    }\n\n    function onLoadFailed(e) {\n        if (e.error) {\n            add(e.request.serviceLocation);\n        }\n    }\n\n    function setup() {\n        if (loadFailedEventName) {\n            eventBus.on(loadFailedEventName, onLoadFailed, this);\n        }\n    }\n\n    function reset() {\n        blacklist = [];\n    }\n\n    setup();\n\n    return {\n        add: add,\n        contains: contains,\n        reset: reset\n    };\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n"]}