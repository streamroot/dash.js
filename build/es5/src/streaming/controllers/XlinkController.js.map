{"version":3,"sources":["../../../../../src/streaming/controllers/XlinkController.js"],"names":[],"mappings":"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","file":"XlinkController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport URLUtils from '../utils/URLUtils';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst ELEMENT_TYPE_PERIOD = 'Period';\nconst ELEMENT_TYPE_ADAPTATIONSET = 'AdaptationSet';\nconst ELEMENT_TYPE_EVENTSTREAM = 'EventStream';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        matchers,\n        iron,\n        manifest,\n        converter,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function setMatchers(value) {\n        matchers = value;\n    }\n\n    function setIron(value) {\n        iron = value;\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        var elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        manifest = mpd;\n        elements = getElementsToResolve(manifest.Period_asArray, manifest, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n        resolve(elements, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        var resolveObject = {};\n        var element,\n            url,\n            i;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        var element,\n            resolveObject,\n            index;\n\n        var openingTag = '<response>';\n        var closingTag = '</response>';\n        var mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            index = element.resolvedContent.indexOf('>') + 1; //find the closing position of the xml tag\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = converter.xml_str2json(mergedContent);\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        var elements = [];\n        var i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case ELEMENT_TYPE_PERIOD:\n                    for (i = 0; i < manifest[ELEMENT_TYPE_PERIOD + '_asArray'].length; i++) {\n                        obj = manifest[ELEMENT_TYPE_PERIOD + '_asArray'][i];\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_ADAPTATIONSET + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_ADAPTATIONSET + '_asArray'], obj, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_EVENTSTREAM + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_EVENTSTREAM + '_asArray'], obj, ELEMENT_TYPE_EVENTSTREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case ELEMENT_TYPE_ADAPTATIONSET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        var toResolve = [];\n        var element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        var resolvedElements = [];\n        var element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type + '_asArray';\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            iron.run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        var i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setMatchers: setMatchers,\n        setIron: setIron,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n"]}