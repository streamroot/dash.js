{"version":3,"sources":["../../../../../src/mss/parser/MssParser.js"],"names":[],"mappings":"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","file":"MssParser.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport ErrorHandler from '../../streaming/utils/ErrorHandler';\nimport BASE64 from '../../../externals/base64';\n\nfunction MssParser(config) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const errorHandler = ErrorHandler(context).getInstance();\n\n    const TIME_SCALE_100_NANOSECOND_UNIT = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    const samplingFrequencyIndex = {\n            96000: 0x0,\n            88200: 0x1,\n            64000: 0x2,\n            48000: 0x3,\n            44100: 0x4,\n            32000: 0x5,\n            24000: 0x6,\n            22050: 0x7,\n            16000: 0x8,\n            12000: 0x9,\n            11025: 0xA,\n            8000: 0xB,\n            7350: 0xC\n        };\n    const mimeTypeMap = {\n            'video': 'video/mp4',\n            'audio': 'audio/mp4',\n            'text': 'application/mp4'\n        };\n\n    let instance,\n        mediaPlayerModel;\n\n\n    function setup() {\n        mediaPlayerModel = config.mediaPlayerModel;\n    }\n\n    function mapPeriod(smoothStreamingMedia) {\n        let period = {};\n        let streams,\n            adaptation;\n\n        period.duration = (parseFloat(smoothStreamingMedia.getAttribute('Duration')) === 0) ? Infinity : parseFloat(smoothStreamingMedia.getAttribute('Duration')) / TIME_SCALE_100_NANOSECOND_UNIT;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i]);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex) {\n\n        let adaptationSet = {};\n        let representations = [];\n        let segmentTemplate = {};\n        let qualityLevels,\n            representation,\n            segments,\n            range,\n            i;\n\n        adaptationSet.id = streamIndex.getAttribute('Name');\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\n\n        range = {\n            start: segments[0].t / segmentTemplate.timescale,\n            end: (segments[segments.length - 1].t + segments[segments.length - 1].d) / segmentTemplate.timescale\n        };\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n\n        let representation = {};\n        let fourCCValue = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null) {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null) {\n            fourCCValue = 'AAC';\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            //this.errHandler.sendWarning(MediaPlayer.dependencies.ErrorHandler.prototype.MEDIA_ERR_CODEC_UNSUPPORTED, \"Codec not supported\", {codec: fourCCValue});\n            log('[MssParser] Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = 'stpp';\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        let objectType = 0;\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex) {\n\n        let segmentTemplate = {};\n        let mediaUrl;\n\n        mediaUrl = streamIndex.getAttribute('Url').replace('{bitrate}', '$Bandwidth$');\n        mediaUrl = mediaUrl.replace('{start time}', '$Time$');\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = TIME_SCALE_100_NANOSECOND_UNIT;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex);\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex) {\n\n        let segmentTimeline = {};\n        let chunks = streamIndex.getElementsByTagName('c');\n        let segments = [];\n        let i,\n            t, d;\n\n        for (i = 0; i < chunks.length; i++) {\n            // Get time and duration attributes\n            t = parseFloat(chunks[i].getAttribute('t'));\n            d = parseFloat(chunks[i].getAttribute('d'));\n\n            if ((i === 0) && !t) {\n                t = 0;\n            }\n\n            if (i > 0) {\n                // Update previous segment duration if not defined\n                if (!segments[segments.length - 1].d) {\n                    segments[segments.length - 1].d = t - segments[segments.length - 1].t;\n                }\n                // Set segment absolute timestamp if not set\n                if (!t) {\n                    t = segments[segments.length - 1].t + segments[segments.length - 1].d;\n                }\n            }\n\n            // Create new segment\n            segments.push({\n                d: d,\n                t: t\n            });\n\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        // Convert from multi-byte to unicode\n        wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n        // Convert to string\n        wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n        // Parse <WRMHeader> to get KID field value\n        xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n        KID = xmlReader.querySelector('KID').textContent;\n\n        // Get KID (base64 decoded) as byte array\n        KID = BASE64.decodeArray(KID);\n\n        // Convert UUID from little-endian to big-endian\n        convertUuidEndianness(KID);\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        let temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n\n        let contentProtection = {};\n        let pro;\n\n        pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n\n        contentProtection.schemeIdUri = 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95';\n        contentProtection.value = 'com.microsoft.playready';\n        contentProtection.pro = pro;\n        contentProtection.pro_asArray = pro;\n\n        return contentProtection;\n    }\n\n    function processManifest(xmlDoc, manifestLoadedTime) {\n        let manifest = {};\n        let contentProtections = [];\n        let smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        let protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            realDuration,\n            firstSegment,\n            lastSegment,\n            adaptationTimeOffset,\n            i;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\n        manifest.timeShiftBufferDepth = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength')) / TIME_SCALE_100_NANOSECOND_UNIT;\n        manifest.mediaPresentationDuration = (parseFloat(smoothStreamingMedia.getAttribute('Duration')) === 0) ? Infinity : parseFloat(smoothStreamingMedia.getAttribute('Duration')) / TIME_SCALE_100_NANOSECOND_UNIT;\n        manifest.minBufferTime = mediaPlayerModel.getStableBufferTime();\n\n        // In case of live streams, set availabilityStartTime property according to DVRWindowLength\n        if (manifest.type === 'dynamic') {\n            manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (manifest.timeShiftBufferDepth * 1000));\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n        for (i = 0; i < adaptations.length; i += 1) {\n            // In case of VOD streams, check if start time is greater than 0.\n            // Therefore, set period start time to the higher adaptation start time\n            if (manifest.type === 'static' && adaptations[i].contentType !== 'text') {\n                firstSegment = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0];\n                lastSegment = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray.length - 1];\n                adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n                adaptationTimeOffset = parseFloat(firstSegment.t) / TIME_SCALE_100_NANOSECOND_UNIT;\n                period.start = (period.start === 0) ? adaptationTimeOffset : Math.max(period.start, adaptationTimeOffset);\n                //get last segment start time, add the duration of this last segment\n                realDuration = parseFloat(((lastSegment.t + lastSegment.d) / TIME_SCALE_100_NANOSECOND_UNIT).toFixed(3));\n                //detect difference between announced duration (in MSS manifest) and real duration => in any case, we want that the video element sends the ended event.\n                //set the smallest value between all the adaptations\n                if (!isNaN(realDuration) && realDuration < manifest.mediaPresentationDuration) {\n                    manifest.mediaPresentationDuration = realDuration;\n                    period.duration = realDuration;\n                }\n            } else {\n                adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            }\n\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            try {\n                let parser = new window.DOMParser();\n\n                xmlDoc = parser.parseFromString(data, 'text/xml');\n                if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                    throw new Error('Error parsing XML');\n                }\n            } catch (e) {\n                errorHandler.manifestError('parsing the manifest failed', 'parse', data, e);\n                xmlDoc = null;\n            }\n        }\n\n        return xmlDoc;\n    }\n\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        log('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: internalParse\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default FactoryMaker.getClassFactory(MssParser);"]}