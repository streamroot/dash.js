{"version":3,"sources":["../../../../src/mss/MssFragmentProcessor.js"],"names":[],"mappings":"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","file":"MssFragmentProcessor.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../core/FactoryMaker';\nimport ISOBoxer from 'codem-isoboxer';\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport MssEvents from './MssEvents';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nISOBoxer.addBoxProcessor('uuid', uuidProcessor);\nISOBoxer.addBoxProcessor('saio', saioProcessor);\nISOBoxer.addBoxProcessor('saiz', saizProcessor);\nISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n\n\nfunction MssFragmentProcessor(config) {\n\n    let context = this.context;\n    let metricsModel = config.metricsModel;\n    let playbackController = config.playbackController;\n    let eventBus = config.eventBus;\n    let instance;\n\n    function setup() {}\n\n    function generateMoov(rep) {\n        let mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create();\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, sp) {\n        if (!e) {\n            return;\n        }\n\n        let request = e.request;\n\n        if (!request) {\n            return;\n        }\n\n        if (request.type === 'MediaSegment') {\n\n            // it's a MediaSegment, let's convert fragment\n            let mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                metricsModel: metricsModel,\n                playbackController: playbackController\n            });\n            mssFragmentMoofProcessor.convertFragment(e, sp);\n\n        } else if (request.type === 'FragmentInfoSegment') {\n\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\n                fragmentInfo: e,\n                streamProcessor: sp\n            });\n\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default FactoryMaker.getClassFactory(MssFragmentProcessor);\n"]}