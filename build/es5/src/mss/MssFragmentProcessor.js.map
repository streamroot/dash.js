{"version":3,"sources":["../../../../src/mss/MssFragmentProcessor.js"],"names":[],"mappings":"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","file":"MssFragmentProcessor.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../core/FactoryMaker';\nimport ISOBoxer from 'codem-isoboxer';\nimport BASE64 from '../../externals/base64';\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType =   [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType =   [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nISOBoxer.addBoxProcessor('uuid', uuidProcessor);\nISOBoxer.addBoxProcessor('saio', saioProcessor);\nISOBoxer.addBoxProcessor('saiz', saizProcessor);\nISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n\n\nfunction MssFragmentProcessor() {\n    const TIME_SCALE = 10000000;\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        trackId;\n\n    function setup() {}\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case 'video':\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case 'audio':\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection) {\n            createProtectionSystemSpecificHeaderBoxForPR(moov, contentProtection[0].pro.__text);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = TIME_SCALE; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = Math.round(period.duration * TIME_SCALE); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = Math.round(period.duration * TIME_SCALE); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = TIME_SCALE; // the time-scale for the entire presentation\n        mdhd.duration = Math.round(period.duration * TIME_SCALE); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media (see getLanguageCode())\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case 'video':\n                hdlr.handler_type = 'vide';\n                break;\n            case 'audio':\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case 'video':\n            case 'audio':\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    name: 'Unsupported codec',\n                    message: 'Unsupported codec',\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBoxForPR(moov, initData) {\n        let pssh = ISOBoxer.createFullBox('pssh', moov);\n        let uint8arraydecodedPROHeader = BASE64.decodeArray(initData);\n\n        pssh.flags = 0;\n        pssh.version = 0;\n        pssh.SystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]); //PlayReady System ID\n\n        pssh.DataSize = uint8arraydecodedPROHeader.length;\n        pssh.Data = uint8arraydecodedPROHeader;\n    }\n\n    function createTrackEncryptionBox(schi) {\n        var tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] :\n            [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    function processMoof(e) {\n        let i;\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        let isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        let tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        let sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [];\n\n                let saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 16777214; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 131072; // set tfhd.default-base-is-moof to true\n        trun.flags |= 1; // set trun.data-offset-present to true\n\n        let moof = isoFile.fetch('moof');\n\n        let length = moof.getLength();\n        //offset is equal to length of the moof box + size and type definition for mdat box.\n        trun.data_offset = length + 8;\n\n        e.response = isoFile.write();\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processMoof: processMoof\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default FactoryMaker.getClassFactory(MssFragmentProcessor);"]}