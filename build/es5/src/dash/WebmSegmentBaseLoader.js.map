{"version":3,"sources":["../../../../src/dash/WebmSegmentBaseLoader.js"],"names":[],"mappings":"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","file":"WebmSegmentBaseLoader.js","sourcesContent":["import Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport EBMLParser from '../streaming/utils/EBMLParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport ErrorHandler from '../streaming/utils/ErrorHandler';\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport XHRLoader from '../streaming/XHRLoader';\n\nfunction WebmSegmentBaseLoader() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        WebM,\n        errHandler,\n        requestModifier,\n        metricsModel,\n        xhrLoader,\n        baseURLController;\n\n    function setup() {\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueBlockNumber: {\n                                tag: 0x5378\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        errHandler = ErrorHandler(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n        xhrLoader = XHRLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.metricsModel) {\n            throw new Error('Missing config parameter(s)');\n        }\n\n        baseURLController = config.baseURLController;\n        metricsModel = config.metricsModel;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let cue;\n        let cueSize;\n        let cueTrack;\n        let ebmlParser = EBMLParser(context).create({data: ab});\n        let numSize;\n\n        ebmlParser.consumeTag(WebM.Segment.Cues);\n        cueSize = ebmlParser.getMatroskaCodedNum();\n\n        while (ebmlParser.moreData() &&\n                ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n                    ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                // block number is strictly optional.\n                // we also have to make sure we don't go beyond the end\n                // of the cues\n                if (ebmlParser.getPos() + 4 > cueSize ||\n                        !ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueBlockNumber, true)) {\n                    cue.CueTracks.push(cueTrack);\n                } else {\n                    // since we have already consumed the tag, get the size of\n                    // the tag's payload, and manually parse an unsigned int\n                    // from the bit stream\n                    numSize = ebmlParser.getMatroskaCodedNum();\n                    cueTrack.BlockNumber = ebmlParser.getMatroskaUint(numSize);\n\n                    cue.CueTracks.push(cueTrack);\n                }\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration;\n        let parsed;\n        let segments;\n        let segment;\n        let i;\n        let len;\n        let start;\n        let end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        log('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        let ebmlParser = EBMLParser(context).create({data: data});\n        let duration;\n        let segments;\n        let parts = theRange.split('-');\n        let request = null;\n        let info = {\n                url: media,\n                range: {\n                    start: parseFloat(parts[0]),\n                    end: parseFloat(parts[1])\n                },\n                request: request\n            };\n        let segmentEnd;\n        let segmentStart;\n\n        log('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n            case WebM.Segment.Info.Duration.tag:\n                duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                break;\n            default:\n                ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            log('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onloadend});\n\n        log('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let initRange = representation.range.split('-');\n        let info = loadingInfo || {\n                range: {\n                    start: parseFloat(initRange[0]),\n                    end: parseFloat(initRange[1])\n                },\n                request: request,\n                url: media,\n                init: true\n            };\n\n        log('Start loading initialization.');\n\n        request = getFragmentRequest(info);\n\n        const onload = function () {\n            // note that we don't explicitly set rep.initialization as this\n            // will be computed when all BaseURLs are resolved later\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        const onloadend = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onloadend});\n\n        log('Perform init load: ' + info.url);\n    }\n\n    function loadSegments(representation, type, theRange, callback) {\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let bytesToLoad = 8192;\n        let info = {\n                bytesLoaded: 0,\n                bytesToLoad: bytesToLoad,\n                range: {\n                    start: 0,\n                    end: bytesToLoad\n                },\n                request: request,\n                url: media,\n                init: false\n            };\n\n        callback = !callback ? onLoaded : callback;\n        request = getFragmentRequest(info);\n\n        // first load the header, but preserve the manifest range so we can\n        // load the cues after parsing the header\n        // NOTE: we expect segment info to appear in the first 8192 bytes\n        log('Parsing ebml header');\n\n        const onload = function (response) {\n            parseEbmlHeader(response, media, theRange, function (segments) {\n                callback(segments, representation, type);\n            });\n        };\n\n        const onloadend = function () {\n            callback(null, representation, type);\n        };\n\n        xhrLoader.load({request: request, success: onload, error: onloadend});\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new Error(null, 'error loading segments', null)});\n        }\n    }\n\n    function getFragmentRequest(info) {\n        let request = new FragmentRequest();\n\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function reset() {\n        errHandler = null;\n        requestModifier = null;\n        log = null;\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);"]}