{"version":3,"sources":["../../../../../src/dash/utils/FragmentedTextBoxParser.js"],"names":[],"mappings":"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","file":"FragmentedTextBoxParser.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction FragmentedTextBoxParser() {\n\n    let instance,\n        boxParser;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.boxParser) {\n            boxParser = config.boxParser;\n        }\n    }\n\n    function getSamplesInfo(ab) {\n        var isoFile = boxParser.parse(ab);\n        var tfhdBox = isoFile.getBox('tfhd');\n        var tfdtBox = isoFile.getBox('tfdt');\n        var trunBox = isoFile.getBox('trun');\n        var moofBox = isoFile.getBox('moof');\n        var mfhdBox = isoFile.getBox('mfhd');\n        var subsBox = isoFile.getBox('subs');\n\n        var sampleDuration,\n            sampleCompositionTimeOffset,\n            sampleCount,\n            sampleSize,\n            sampleDts,\n            sampleList,\n            sample,\n            i, j,\n            dataOffset,\n            sequenceNumber,\n            totalDuration,\n            sampleWithSubsIndex;\n\n        sequenceNumber = mfhdBox.sequence_number;\n        sampleCount = trunBox.sample_count;\n        sampleDts = tfdtBox.baseMediaDecodeTime;\n        dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\n\n        sampleList = [];\n        sampleWithSubsIndex = 0;\n        for (i = 0; i < sampleCount; i++) {\n            sample = trunBox.samples[i];\n            sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\n            sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\n            sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\n            var sampleData = {\n                'dts': sampleDts,\n                'cts': (sampleDts + sampleCompositionTimeOffset),\n                'duration': sampleDuration,\n                'offset': moofBox.offset + dataOffset,\n                'size': sampleSize,\n                'subSizes': [sampleSize]\n            };\n            if (subsBox && sampleWithSubsIndex < subsBox.samples_with_subsamples.length &&\n                subsBox.samples_with_subsamples[sampleWithSubsIndex].nr == (i + 1)) {\n                sampleData.subSizes = [];\n                for (j = 0; j < subsBox.samples_with_subsamples[sampleWithSubsIndex].subsamples.length; j++) {\n                    let subSize = subsBox.samples_with_subsamples[sampleWithSubsIndex].subsamples[j].size;\n                    sampleData.subSizes.push(subSize);\n                }\n                sampleWithSubsIndex++;\n            }\n            sampleList.push(sampleData);\n            dataOffset += sampleSize;\n            sampleDts += sampleDuration;\n        }\n        totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\n        return {sampleList: sampleList, sequenceNumber: sequenceNumber, totalDuration: totalDuration};\n    }\n\n    function getMediaTimescaleFromMoov(ab) {\n        var isoFile = boxParser.parse(ab);\n        var mdhdBox = isoFile.getBox('mdhd');\n\n        return mdhdBox ? mdhdBox.timescale : NaN;\n    }\n\n    instance = {\n        getSamplesInfo: getSamplesInfo,\n        getMediaTimescaleFromMoov: getMediaTimescaleFromMoov,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nFragmentedTextBoxParser.__dashjs_factory_name = 'FragmentedTextBoxParser';\nexport default FactoryMaker.getSingletonFactory(FragmentedTextBoxParser);"]}