{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":[],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction DashManifestModel(config) {\n\n    let instance;\n    let context = this.context;\n\n    const urlUtils = URLUtils(context).getInstance();\n    const mediaController = config.mediaController;\n    const timelineConverter = config.timelineConverter;\n    const adapter = config.adapter;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function getIsTypeOf(adaptation, type) {\n\n        let i,\n            len,\n            representation,\n            col,\n            mimeTypeRegEx,\n            codecs;\n        let result = false;\n        let found = false;\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\n            col = adaptation.ContentComponent_asArray;\n        }\n\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if ((adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) &&\n            (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS))) {\n            // Just check the start of the codecs string\n            codecs = adaptation.Representation_asArray[0].codecs;\n            if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\n                return type === Constants.FRAGMENTED_TEXT;\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getIsMain(adaptation) {\n        return getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === DashConstants.MAIN;\n        })[0];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && realAdaptation.Representation_asArray !== undefined && realAdaptation.Representation_asArray !== null) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        let realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        let realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : null : null;\n        if (realAdaptations && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        let realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let len = realAdaptations.length;\n\n        if (realAdaptation) {\n            for (let i = 0; i < len; i++) {\n                let objectUtils = ObjectUtils(context).getInstance();\n                if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        let realAdaptationSet = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let i,\n            len;\n        let adaptations = [];\n\n        for (i = 0, len = realAdaptationSet.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptationSet[i], type)) {\n                adaptations.push(processAdaptation(realAdaptationSet[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getAdaptationForType(manifest, periodIndex, type, streamInfo) {\n\n        let adaptations = getAdaptationsForType(manifest, periodIndex, type);\n\n        if (!adaptations || adaptations.length === 0) return null;\n\n        if (adaptations.length > 1 && streamInfo) {\n            let currentTrack = mediaController.getCurrentTrackFor(type, streamInfo);\n            let allMediaInfoForType = adapter.getAllMediaInfoForType(streamInfo, type);\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (currentTrack && mediaController.isTracksEqual(currentTrack, allMediaInfoForType[i])) {\n                    return adaptations[i];\n                }\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    function getCodec(adaptation) {\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            let representation = adaptation.Representation_asArray[0];\n            return (representation.mimeType + ';codecs=\"' + representation.codecs + '\"');\n        }\n\n        return null;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function hasProfile(manifest, profile) {\n        var has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getIsDVB(manifest) {\n        return hasProfile(manifest, PROFILE_DVB);\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else {\n            mpdDuration = Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        if (!realAdaptation || !realAdaptation.Representation_asArray || !realAdaptation.Representation_asArray.length) return null;\n\n        let processedRealAdaptation = processAdaptation(realAdaptation);\n        let realRepresentations = processedRealAdaptation.Representation_asArray;\n        let ln = realRepresentations.length;\n        let bitrateList = [];\n        let i = 0;\n\n        for (i = 0; i < ln; i++) {\n            bitrateList.push({\n                bandwidth: realRepresentations[i].bandwidth,\n                width: realRepresentations[i].width || 0,\n                height: realRepresentations[i].height || 0,\n                scanType: realRepresentations[i].scanType || null\n            });\n        }\n\n        return bitrateList;\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 && isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        let voRepresentations = [];\n        let voRepresentation,\n            initialization,\n            segmentInfo,\n            processedRealAdaptation,\n            realRepresentation,\n            i,\n            s;\n\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            var periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                processedRealAdaptation = processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n\n        for (i = 0; processedRealAdaptation && i < processedRealAdaptation.Representation_asArray.length; i++) {\n            realRepresentation = processedRealAdaptation.Representation_asArray[i];\n            voRepresentation = new Representation();\n            voRepresentation.index = i;\n            voRepresentation.adaptation = voAdaptation;\n\n            if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                voRepresentation.id = realRepresentation.id;\n            }\n\n            if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                voRepresentation.codecs = realRepresentation.codecs;\n            }\n            if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n            }\n\n            if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                voRepresentation.bandwidth = realRepresentation.bandwidth;\n            }\n            if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                voRepresentation.width = realRepresentation.width;\n            }\n            if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                voRepresentation.height = realRepresentation.height;\n            }\n            if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                voRepresentation.scanType = realRepresentation.scanType;\n            }\n            if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n            }\n            if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                segmentInfo = realRepresentation.SegmentBase;\n                voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n            } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                segmentInfo = realRepresentation.SegmentList;\n\n                if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                    s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\n                    if (!s.hasOwnProperty('r') || s.r >= 0) {\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                    voRepresentation.useCalculatedLiveEdgeTime = true;\n                }\n            } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                segmentInfo = realRepresentation.SegmentTemplate;\n\n                if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                    s = segmentInfo.SegmentTimeline.S_asArray[segmentInfo.SegmentTimeline.S_asArray.length - 1];\n                    if (!s.hasOwnProperty('r') || s.r >= 0) {\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                }\n\n                if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                    voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                        .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                }\n            } else {\n                voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n            }\n\n            if (segmentInfo) {\n                if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                    initialization = segmentInfo.Initialization;\n\n                    if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                        voRepresentation.initialization = initialization.sourceURL;\n                    } else if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                        voRepresentation.range = initialization.range;\n                        // initialization source url will be determined from\n                        // BaseURL when resolved at load time.\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\n                    voRepresentation.range = 0;\n                }\n\n                if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                    voRepresentation.timescale = segmentInfo.timescale;\n                }\n                if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                    // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                    // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                    // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                    // exceeds @maxSegmentDuration\n                    //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\n                    voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                }\n                if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                    voRepresentation.startNumber = segmentInfo.startNumber;\n                }\n                if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                    voRepresentation.indexRange = segmentInfo.indexRange;\n                }\n                if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                    voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                }\n            }\n\n            voRepresentation.MSETimeOffset = timelineConverter.calcMSETimeOffset(voRepresentation);\n\n            voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n\n            voRepresentations.push(voRepresentation);\n        }\n\n        return voRepresentations;\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        let realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        let voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsFragmentedText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\n                } else {\n                    voAdaptationSet.type = Constants.TEXT;\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        let isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        let voPeriods = [];\n        let realPeriod1 = null;\n        let realPeriod = null;\n        let voPeriod1 = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (realPeriod1 !== null && realPeriod.hasOwnProperty(DashConstants.DURATION) && voPeriod1 !== null) {\n                voPeriod = new Period();\n                voPeriod.start = voPeriod1.start + voPeriod1.duration;\n                voPeriod.duration = realPeriod.duration;\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPeriod1 !== null && isNaN(voPeriod1.duration)) {\n                voPeriod1.duration = voPeriod.start - voPeriod1.start;\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n            }\n\n            if (voPeriod !== null && realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                voPeriod.duration = realPeriod.duration;\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n                voPeriods.push(voPeriod);\n                realPeriod1 = realPeriod;\n                voPeriod1 = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPeriod1 !== null && isNaN(voPeriod1.duration)) {\n            voPeriod1.duration = getEndTimeForLastPeriod(voPeriod1) - voPeriod1.start;\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        let mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n        }\n\n        return mpd;\n    }\n\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            throw new Error('Must have @mediaPresentationDuratio on MPD or an explicit @duration on the last period.');\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        let manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        let periodArray = manifest ? manifest.Period_asArray : null;\n        let eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        let events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                let eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (j = 0; j < eventStreams[i].Event_asArray.length; j++) {\n                    let event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        let eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            let eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n        let isDynamic = getIsDynamic(manifest);\n        let hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        let utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        let utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    let entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        let baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        let entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                /* NOTE: byteRange, availabilityTimeOffset,\n                 * availabilityTimeComplete currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n\n            return manifest.Location;\n        }\n\n        // may well be undefined\n        return undefined;\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsAudio: getIsAudio,\n        getIsVideo: getIsVideo,\n        getIsText: getIsText,\n        getIsMuxed: getIsMuxed,\n        getIsTextTrack: getIsTextTrack,\n        getIsFragmentedText: getIsFragmentedText,\n        getIsMain: getIsMain,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getAdaptationForType: getAdaptationForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        getIsDVB: getIsDVB,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation\n    };\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n"]}